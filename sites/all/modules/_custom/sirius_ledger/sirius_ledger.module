<?php

// I hate notice errors
ini_set('error_reporting', ini_get('error_reporting') & ~E_NOTICE & ~E_DEPRECATED);

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.menu.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.permission.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.currency.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.ea.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.accounts.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.payments.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.ar.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.invoices.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.balance.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.policy.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.monthly.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.hourly.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.event.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.token.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.feed.inc';
// require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.feed_charges.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.feed_allocate.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.auth.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.charge_plugin.inc';

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_config.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_payment_update.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_payment_post.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_payment_allocate.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_account_payments.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_account_ar.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_worker_monthly.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_entity_policy.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_delinquency.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.page_list_workers.inc';

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.term_tab_payment_type_settings.inc';

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_ledger/sirius_ledger.report_discrepancy.inc';

/**
 * Implements hook_sirius_domain_component_info
 */

function sirius_ledger_sirius_domain_component_info() {
  return array(
    'ledger:worker:charge:monthly' => array(
      'title' => 'Ledger - Worker - Charge - Monthly',
      'description' => 'Enable monthly billing per-worker',
    ),
    'ledger:worker:charge:hourly' => array(
      'title' => 'Ledger - Worker - Charge - Hourly',
      'description' => 'Enable hourly billing per-worker',
    ),
    'ledger:charge:event' => array(
      'title' => 'Ledger - Charge - Event',
      'description' => 'Enable event charges',
    ),
  );
}

/**
 * Implements hook_sirius_plugin_info
 */

function sirius_ledger_sirius_plugin_info($class) {
	if ($class == 'ledger_charge') {
		sirius_require('sirius_ledger', 'sirius_ledger.charge_plugin.root.inc');
		sirius_require('sirius_ledger', 'sirius_ledger.charge_plugin.hourly.inc');
		sirius_require('sirius_ledger', 'sirius_ledger.charge_plugin.monthly.inc');
		sirius_require('sirius_ledger', 'sirius_ledger.charge_plugin.monthly_benefit.inc');
		sirius_require('sirius_ledger', 'sirius_ledger.charge_plugin.random.inc');
		sirius_require('sirius_ledger', 'sirius_ledger.charge_plugin.event.inc');

	  $items = array();
	  Sirius_Ledger_Charge_Plugin_Hourly::getInstance()->setInfo($items);
	  Sirius_Ledger_Charge_Plugin_Monthly::getInstance()->setInfo($items);
	  Sirius_Ledger_Charge_Plugin_Monthly_Benefit::getInstance()->setInfo($items);
	  Sirius_Ledger_Charge_Plugin_Random::getInstance()->setInfo($items);
	  Sirius_Ledger_Charge_Plugin_Event::getInstance()->setInfo($items);
	  return $items;
	}

	if ($class == 'ledger_currency') {
	  $items = array();
	  Sirius_Ledger_Currency_Plugin_USD::getInstance()->setInfo($items);
	  Sirius_Ledger_Currency_Plugin_Points::getInstance()->setInfo($items);
	  return $items;
	}
}

/**
 * Implement hook_sirius_config_links_alter
 */

function sirius_ledger_sirius_config_links_alter(&$links) {
	$links['ledger'] = array('title' => 'A/R Accounting and Ledger');
	$links['ledger']['links']['sirius/config/ledger'] 					= array('title' => 'A/R Settings', 'description' => 'Settings for the A/R accounting system: ledger, dues, payments, charges, etc.');
	$links['ledger']['links']['sirius/ledger/stripe/config']		= array('title' => 'Stripe Settings', 'description' => 'Settings for using the Stripe payment processor');
	$links['ledger']['links']['sirius/ledger/stripe/idsearch']		= array('title' => 'Stripe ID Search', 'description' => 'Search for a specific Stripe ID');
	$links['ledger']['links']['sirius/ledger/accounts'] = array('title' => 'Accounts', 'description' => 'List of fund / accounts, e.g. Health and Welfare Fund, Employee Strike Fund, etc.');
}

/** 
 * Implements hook_sirius_access_info
 */

function sirius_ledger_sirius_access_info() {
  $infos = array();
  Sirius_Ledger_Access::getInstance()->setInfo($infos);
  return $infos;
}

/***
 * Implements hook_report_cache_info() 
 */

function sirius_ledger_report_cache_info() {
  sirius_require('sirius_ledger', 'reports/fourmonth.inc');
  sirius_require('sirius_ledger', 'reports/ratehistory.inc');

  $items = array();
  $items += sirius_ledger_report_discrepancy_info();
  Sirius_Ledger_Report_Fourmonth::getInstance()->setInfo($items);
  Sirius_Ledger_Report_Ratehistory::getInstance()->setInfo($items);
  return $items;
}

/**
 * Implements hook_sirius_cron_scan_info()
 */

function sirius_ledger_sirius_cron_scan_info() {
	$items['ledger_monthly'] = array(
		'title' => 'Ledger Monthly Charge',
		'description' => 'Charge any monthly or semimonthly dues.',
		'schedule' => 'hourly',
		'callback' => 'sirius_ledger_monthly_charge_batch',
		'multidomain' => TRUE,
		'component' => 'ledger:worker:charge:monthly',
	);

	$items['ledger_orphan_scan'] = array(
		'title' => 'Ledger Orphan Scan',
		'description' => 'Delete any orphaned ledger entries',
		'schedule' => 'daily',
		'callback' => 'sirius_ledger_ar_orphan_scan',
		'multidomain' => FALSE,
	);


	return $items;
}

/**
 * Implements hook_node_insert()
 */

function sirius_ledger_node_insert($node) {
	if ($node->type == 'sirius_payperiod') { sirius_ledger_payperiod_set($node, 'live'); }
	if ($node->type == 'sirius_event_participant') { sirius_ledger_event_participant_set($node, 'live'); }
}

/**
 * Implements hook_node_update()
 */

function sirius_ledger_node_update($node) {
	if ($node->type == 'sirius_payperiod') { sirius_ledger_payperiod_set($node, 'live'); }
	if ($node->type == 'sirius_event_participant') { sirius_ledger_event_participant_set($node, 'live'); }
}

/**
 * Implements hook_node_delete()
 */

function sirius_ledger_node_delete($node) {
	if ($node->type == 'sirius_payperiod') { sirius_ledger_payperiod_clear($node, 'live'); }
	if ($node->type == 'sirius_event_participant') { sirius_ledger_event_participant_set($node, 'live'); }
}

/**
 * Implements hook_sirius_backlinks_from_node_alter
 */

function sirius_ledger_sirius_backlinks_from_node_alter(&$links, $node) {
	// For accounts, add a link to "all accounts"
	if ($node->type == 'sirius_ledger_account') {
		$links['sirius/ledger/accounts'] = array('name' => 'All Accounts');
	}

	// For ea nodes, set backlinks
	Sirius_Ledger_EA::getInstance()->backlinks_from_node_alter($links, $node);
}

/**
 * Implements hook_sirius_dashboard_info
 */

function sirius_ledger_sirius_dashboard_plugin_info() {
  $plugins = array();

  $plugins['ledger_worker'] = array(
    'title' => 'Ledger: Worker',
    'description' => '',
    'file' => 'sirius_ledger.dashboard_worker.inc',
    'module' => 'sirius_ledger',
    'callbacks' => array(
      'data' => 'sirius_ledger_dashboard_worker_data',
      // 'config' => 'sirius_trust_dashboard_plugin_elections_config',
      // 'prefs' => 'sirius_trust_dashboard_plugin_elections_prefs',
    ),
  );

  return $plugins;
}

/**
 * Implements hook_node_view_alter
 */

function sirius_ledger_node_view($node, $view_mode, $langcode) {
	// Show Stripe links in the payment
	if ($view_mode == 'full' && $node->type == 'sirius_payment') {
		sirius_require('sirius_ledger', 'sirius_ledger.stripe.inc');
		sirius_ledger_service()->payment_node_view($node, $view_mode, $langcode);
	}


	// Change rendering for "Payer"
	/*
	if ($view_mode == 'full' && $node->type == 'sirius_payment') {
		$html = '';

		$contact_nid = $node->field_sirius_payer['und'][0]['target_id'];
		if ($contact_nid) {
			$path = "node/$contact_nid";
			if (drupal_valid_path($path)) { $html .= l("Payer - Contact", $path, array('attributes' => array('class' => 'tool-button'))); }

			$worker_node = sirius_worker_get_by_contact_nid($contact_nid);
			if ($worker_node) {
				$worker_nid = $worker_node->nid;
				$path = "node/$worker_nid/sirius_worker_ledger/payments";
				if (drupal_valid_path($path)) { $html .= l("Payer - Worker", $path, array('attributes' => array('class' => 'tool-button'))); }
			}
		}

		$account_nid = $node->field_sirius_ledger_account['und'][0]['target_id'];
		if ($account_nid) {
			$path = "node/$account_nid/sirius_ledger_account_payments";
			if (drupal_valid_path($path)) { $html .= l("Account", $path, array('attributes' => array('class' => 'tool-button'))); }
		}

		if ($html) {
			$html = '<div class="sirius_node_suffix">' . $html . '</div>';
			$node->content['sirius_node_suffix']['#markup'] = $html;
			$node->content['sirius_node_suffix']['#weight'] = 1000;
		}
	}
	*/
}

function sirius_ledger_service() {
	sirius_require('sirius_ledger', 'sirius_ledger.stripe.inc');
	return Sirius_Ledger_Service_Stripe::getInstance();
}

function sirius_ledger_invoice_obj() {
	sirius_require('sirius_ledger', 'sirius_ledger.invoices.inc');
	return Sirius_Ledger_Invoices::getInstance();
}

function sirius_ledger_ms_level_options() {
  $ms_options = sirius_taxonomy_load('sirius_member_status', 'tid', 'name');
  $ms_level_options = array();
  foreach ($ms_options as $ms_tid => $ms_name) {
    $levels = sirius_training_levels_fetch($ms_tid);
    $ms_level_options[$ms_tid] = $ms_name;
    foreach ($levels as $level_code => $level) {
      $ms_level_options["$ms_tid|$level_code"] = $ms_name . ': ' . $level['title'];
    }
  }
  return $ms_level_options;
}

/**
 * Implements hook_sirius_dev_make_safe_domain
 */

function sirius_ledger_sirius_dev_make_safe_domain($context) {
	sirius_domain_variable_set('sirius_ledger_stripe_mode', 'test');
	sirius_domain_variable_set('sirius_ledger_stripe_live_account_secret', 'DISABLED FOR DEV SERVER');
	sirius_domain_variable_set('sirius_ledger_stripe_live_account_id', 'DISABLED FOR DEV SERVER');
}

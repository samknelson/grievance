<?php

/**
 * Change "Employer Name" field to be a long-text field.
 */

function grievance_update_7001() {
  // Manual database changes.
  db_query("UPDATE {field_config} SET type = 'text_long' WHERE field_name = 'field_grievance_emp_name'");
  db_change_field('field_data_field_grievance_emp_name', 'field_grievance_emp_name_value', 'field_grievance_emp_name_value', array(
    'type' => 'text',
    'size' => 'big',
    'not null' => FALSE,
  ));
  db_change_field('field_revision_field_grievance_emp_name', 'field_grievance_emp_name_value', 'field_grievance_emp_name_value', array(
    'type' => 'text',
    'size' => 'big',
    'not null' => FALSE,
  ));

  // Clear caches.
  field_cache_clear(TRUE);
}

/**
 * Set the "status date" = "creation date" for log entries with no status date.
 */

function grievance_update_7002() {
  $sql .= "select node.nid ";
  $sql .= "from node ";
  $sql .= "left join field_data_field_grievance_status_date on (field_data_field_grievance_status_date.entity_type = 'node' and field_data_field_grievance_status_date.entity_id = node.nid) ";
  $sql .= "where node.type = 'grievance_log' ";
  $sql .= "and field_grievance_status_date_value is null ";
  $sql .= "order by node.nid ";

  $stmt = db_query($sql, array());
  $nids = array();
  while ($hr = $stmt->fetchAssoc()) {
    $nids[] = $hr['nid'];
  }

  foreach ($nids as $nid) {
    print "Updating log node $nid\n";
    $node = node_load($nid);
    $node->field_grievance_status_date['und'][0]['value'] = date('Y-m-d', $node->created);
    node_save($node);
    entity_get_controller('node')->resetCache();
  }
}

/**
 * Move weight from the native DraggableViews handler into a standard Drupal field
 */

function grievance_update_7003() {
  // First set all to 0
  /*
  $sql = "select * from node where type in ('grievance_contract_clause', 'grievance_contract_section') ";
  $sql .= "order by nid ";
  $stmt = db_query($sql, array());
  $nids = array();
  while ($hr = $stmt->fetchAssoc()) {
    $nids[] = $hr['nid'];
  }

  foreach ($nids as $nid) {
    $node = node_load($nid);
    print "Initializing weight for $nid (" . $node->title . ")\n";
    $node->field_grievance_weight['und'][0]['value'] = 0;
    node_save($node);
    entity_get_controller('node')->resetCache();
  }
  */

  print "Updating weight...\n";
  $sql = "select * from draggableviews_structure ";
  $sql .= "where view_name in ('grievance_contract_clauses', 'grievance_contract_sections') ";
  $sql .= "order by view_name, entity_id ";

  $stmt = db_query($sql, array());
  $nids = array();
  while ($hr = $stmt->fetchAssoc()) {
    $nids[$hr['entity_id']] = $hr['weight'];
  }

  foreach ($nids as $nid => $weight) {
    $node = node_load($nid);
    if (!$node->title) { continue; }
    print "Updating weight for $nid (" . $node->title . ")\n";
    $node->field_grievance_weight['und'][0]['value'] = $weight;
    node_save($node);
    entity_get_controller('node')->resetCache();
  }
}


<?php

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.menu.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.permission.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.benefit.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.beneficiary.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.eligibility.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.elections.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.policy.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.relationships.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.denorm.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.services.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.cobra.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.qmsco.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.changequeue.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_trust') . '/sirius_trust.provider_edi.inc';

/**
 * Implements hook_sirius_domain_component_info
 */

function sirius_trust_sirius_domain_component_info() {
  return array(
    'trust' => array(
      'title' => 'Trust',
      'description' => 'Manage Trust Benefits, Dependants, etc.',
    ),
    'trust:provider' => array(
      'title' => 'Trust - Provider',
      'description' => 'Manage Trust service providers, such as doctor offices or hospitals.',
    ),
    'trust:provider:edi' => array(
      'title' => 'Trust - Provider - EDI',
      'description' => 'Manage provider (vendor) feeds',
    ),
    'trust:beneficiary' => array(
      'title' => 'Trust - Beneficiary',
      'description' => 'Manage beneficiary designations.',
    ),
    'trust:cobra' => array(
      'title' => 'Trust - COBRA',
      'description' => 'Enable COBRA determinations and functionality.',
    ),
  );
}


/**
 * Implements hook_form_alter
 */

function sirius_trust_form_alter(&$form, &$form_state, $form_id) {
   if ($form_id == 'sirius_trust_worker_benefit_node_form') { sirius_trust_worker_benefit_node_form_alter($form, $form_state, $form_id); }
   if ($form_id == 'sirius_trust_worker_election_node_form') { sirius_trust_worker_election_node_form_alter($form, $form_state, $form_id); }
}

/**
 * Implements hook_node_validate()
 */

function sirius_trust_node_validate($node, $form, &$form_state) {
  if (isset($node->field_sirius_provider_npi)) {
    sirius_require('sirius_trust', 'sirius_trust.npi.inc');
    sirius_trust_provider_npi_node_validate($node, $form, $form_state);
  }
}

/**
 * Implements hook_node_presave()
 */

function sirius_trust_node_presave($node) {
  if ($node->type == 'sirius_trust_worker_benefit') { sirius_trust_worker_benefit_node_presave($node); }
  if ($node->type == 'sirius_trust_worker_election') { sirius_trust_worker_election_node_presave($node); }
  if ($node->type == 'sirius_trust_worker_beneficiary') { sirius_trust_worker_beneficiary_node_presave($node); }
}

/**
 * Implements hook_node_update
 */

function sirius_trust_node_update($node) { return sirius_trust_denormalize_queue($node); }

/**
 * Implements hook_node_insert
 */

function sirius_trust_node_insert($node) { return sirius_trust_denormalize_queue($node); }

/**
 * Implements hook_node_delete
 */

function sirius_trust_node_delete($node) { return sirius_trust_denormalize_queue($node); }

/**
 * Implements hook_node_veiw
 */

function sirius_trust_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'sirius_trust_benefit' && $view_mode == 'full') {
    // Hide certain fields from non-staff
    if (Sirius_Trust_Access::getInstance()->access('staff', array('worker_node' => $worker_node))) { return; }
    unset($node->content['field_sirius_id']);
    unset($node->content['field_sirius_active']);
  }
}

/***
 * Implements hook_report_cache_info() 
 */

function sirius_trust_report_cache_info() {
  $items = array();

  sirius_require('sirius_trust', 'sirius_trust.report_eligibility_compare.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_worker_benefit.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_worker_benefit_warning.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_worker_benefit_multiple.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_worker_benefit_summary.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_worker_benefit_change.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_relationship_sequence.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_newhire.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_hour.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_relationship_self.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_qmsco_no_rp.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_qmsco_multiple_rp.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_worker_benefit_pair.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_relationship_reciprocal.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_election_dependent_uncovered.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_worker_benefit_ending.inc');
  sirius_require('sirius_trust', 'sirius_trust.report_missing_demog.inc');
  // sirius_require('sirius_trust', 'sirius_trust.report_election_no_hours.inc');

  $items['sirius-trust-eligibility-compare'] = sirius_trust_report_eligibility_compare_info();
  $items['sirius-trust-worker-benefit'] = sirius_trust_report_worker_benefit_info();
  $items['sirius-trust-worker-change'] = sirius_trust_report_worker_benefit_change_info();
  $items['sirius-trust-relationship-sequence'] = sirius_trust_report_relationship_sequence_info();
  Sirius_Trust_Report_Worker_Benefit_Ending::getInstance()->setInfo($items);

  Sirius_Trust_Report_Newhire::getInstance()->setInfo($items);
  Sirius_Trust_Report_Hour::getInstance()->setInfo($items);
  Sirius_Trust_Report_WB_Summary::getInstance()->setInfo($items);
  Sirius_Trust_Report_Relationship_Self::getInstance()->setInfo($items);
  Sirius_Trust_Report_Qmsco_No_Rp::getInstance()->setInfo($items);
  Sirius_Trust_Report_Qmsco_Multiple_Rp::getInstance()->setInfo($items);
  Sirius_Trust_Report_Worker_Benefit_Pair::getInstance()->setInfo($items);
  Sirius_Trust_Report_Relationship_Reciprocal::getInstance()->setInfo($items);
  Sirius_Trust_Report_Missing_Demog::getInstance()->setInfo($items);
  // Sirius_Trust_Report_Election_No_Hours::getInstance()->setInfo($items);

  // $items['sirius-trust-worker-detail'] = sirius_trust_report_worker_benefit_detail_info();

  $items['sirius-trust-worker-benefit-warning'] = array(
    'name' => t('Coverage - Warnings'),
    'description' => '',
    'access' => 'sirius trust staff',
    'fields' => sirius_trust_report_worker_benefit_warning_fields(),
    'form_callback' => 'sirius_trust_report_worker_benefit_warning_form',
    'pk_list_callback' => 'sirius_trust_report_worker_benefit_warning_pks',
    'batch_callback' => 'sirius_trust_report_worker_benefit_warning_batch',
    'render_callbacks' => array(
      'View' => 'sirius_trust_report_worker_benefit_warning_view',
    ),
    'module' => 'sirius_trust',
    'file' => 'sirius_trust.report_worker_benefit_warning.inc',
    'dashboard' => TRUE,
  );

  $items['sirius-trust-worker-benefit-multiple'] = array(
    'name' => t('Coverage - Data Integrity - Multiple'),
    'description' => '',
    'access' => 'sirius trust staff',
    'fields' => sirius_trust_report_worker_benefit_multiple_fields(),
    'form_callback' => 'sirius_trust_report_worker_benefit_multiple_form',
    'pk_list_callback' => 'sirius_trust_report_worker_benefit_multiple_pks',
    'batch_callback' => 'sirius_trust_report_worker_benefit_multiple_batch',
    'render_callbacks' => array(
      'View' => 'sirius_trust_report_worker_benefit_multiple_view',
    ),
    'module' => 'sirius_trust',
    'file' => 'sirius_trust.report_worker_benefit_multiple.inc',
    'dashboard' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_sirius_config_links_alter()
 */

function sirius_trust_sirius_config_links_alter(&$links) {
  $links['trust']['title'] = 'Trust';
  $links['trust']['links']['sirius/trust/config'] = array('title' => 'General Configuration', 'description' => 'Configure general settings for the Sirius Trust module.');
  $links['trust']['links']['sirius/trust/cobra'] = array('title' => 'COBRA');
  $links['trust']['links']['sirius/trust/benefits'] = array('title' => 'Benefits', 'description' => 'Configure system benefits.');
  $links['trust']['links']['sirius/trust/services'] = array('title' => 'Services', 'description' => 'Configure services (usually associated with CPT codes).');
  $links['trust']['links']['sirius/trust/providers'] = array('title' => 'Providers', 'description' => 'Configure service providers, such as outpatient facilities, clinics, or hospitals.');
  $links['trust']['links']['sirius/trust/election/wizard'] = array('title' => 'Election Wizards', 'description' => 'Configure or list election wizards.');
}

/**
 * Implements hook_sirius_cron_scan_info()
 */

function sirius_trust_sirius_cron_scan_info() {
  $items['trust_benefit'] = array(
    'title' => 'Trust Worker Benefit Scan',
    'description' => 'Check eligibility for all worker benefits',
    'schedule' => 'always',
    'callback' => 'sirius_trust_worker_benefit_scan',
    'multidomain' => TRUE,
    'component' => 'trust',
  );

  $items['trust_election'] = array(
    'title' => 'Trust Worker Election Scan',
    'description' => 'Check elections for all workers, and make sure that only one is active at a time.',
    'schedule' => 'daily',
    'callback' => 'sirius_trust_worker_election_scan',
    'multidomain' => TRUE,
    'component' => 'trust',
  );

  /*
  $items['trust_beneficiary'] = array(
    'title' => 'Trust Worker Beneficiary Scan',
    'description' => 'Check beneficiaries for all workers, and make sure that only one is active at a time.',
    'schedule' => 'daily',
    'callback' => 'sirius_trust_worker_beneficiary_scan',
    'multidomain' => TRUE,
    'component' => 'trust',
  );
  */

  $items['trust_wb_scan_changelog_purge'] = array(
    'title' => 'Trust WB Scan Changelog',
    'description' => 'Purge old scan changelog entries',
    'schedule' => 'daily',
    'callback' => 'sirius_trust_wb_scan_changelog_purge_cron',
    'multidomain' => FALSE,
    'component' => 'trust',
  );

  return $items;
}


/**
 * Implements hook_sirius_log_buckets_alter
 */

function sirius_sirius_log_buckets_alter(&$buckets) {
  $buckets['trust_worker_election'] = array(
    'title' => 'Log',
    'content_type' => 'sirius_trust_worker_election',
    'permissions' => array('sirius trust staff'),
    'path' => 'sirius_trust_worker_election_log',
    'weight' => 7,
    'can_add' => TRUE,
  );
}


/**
 * Implements hook_sirius_flood_info
 */

function sirius_trust_sirius_flood_info() {
  $info['sirius_trust_election_wizard_phone'] = array(
    'title' => 'Trust: Election Wizard: Phone Validation',
    'threshold_default' => 15,
    'window_default' => 5*60,
    'description' => 'A user attempted to validate a phone number using the election wizard',
  );

  return $info;
}


/***
 * Implements hook_sirius_wizard_info()
 */

function sirius_trust_sirius_wizard_info() {
  sirius_require('sirius_trust', 'sirius_trust.election_wizard.inc');
  sirius_require('sirius_trust', 'sirius_trust.feed_providers.inc');
  sirius_require('sirius_trust', 'sirius_trust.feed_services.inc');

  $items = array();
  $items += sirius_trust_election_wizard_info();
  $items += sirius_trust_feed_providers_info();
  $items += sirius_trust_feed_services_info();
  return $items;
}

/**
 * Implements hook_sirius_backlinks_from_node_alter
 */

function sirius_trust_sirius_backlinks_from_node_alter(&$links, $node) {
  if ($node->type == 'sirius_trust_service') {
    $links['sirius/trust/services'] = array('name' => 'All Services');
  }

 if ($node->type == 'sirius_log' && $node->field_sirius_category['und'][0]['value'] == 'trust:election_wizard') {
    $worker_node = sirius_log_handler($node, 'sirius_worker');
    unset($links['node/' . $worker_node->nid . '/sirius_worker_log']);
    $links['node/' . $worker_node->nid . '/sirius_trust_worker_election'] = array('name' => 'Worker');
  }
}

/**
 * Implements hook_sirius_dashboard_info
 */

function sirius_trust_sirius_dashboard_plugin_info() {
  $plugins = array();

  $plugins['trust_elections'] = array(
    'title' => 'Trust: Elections',
    'description' => '',
    'file' => 'sirius_trust.dashboard_plugin_elections.inc',
    'module' => 'sirius_trust',
    'callbacks' => array(
      'data' => 'sirius_trust_dashboard_plugin_elections_data',
      'config' => 'sirius_trust_dashboard_plugin_elections_config',
      // 'prefs' => 'sirius_trust_dashboard_plugin_elections_prefs',
    ),
  );

  $plugins['trust_changequeue'] = array(
    'title' => 'Trust: Changequeue',
    'description' => '',
    'file' => 'sirius_trust.dashboard_plugin_changequeue.inc',
    'module' => 'sirius_trust',
    'callbacks' => array(
      'data' => 'sirius_trust_dashboard_plugin_changequeue_data',
    ),
  );

  $plugins['trust_wbs'] = array(
    'title' => 'Trust: Worker: Benefits',
    'description' => '',
    'file' => 'sirius_trust.dashboard_wbs.inc',
    'module' => 'sirius_trust',
    'callbacks' => array(
      'data' => 'sirius_trust_dashboard_wbs_data',
    ),
  );

  $plugins['trust_wb_scan'] = array(
    'title' => 'Trust: Worker Benefit Scan Status',
    'description' => '',
    'file' => 'sirius_trust.benefit.inc',
    'module' => 'sirius_trust',
    'callbacks' => array(
      'data' => 'sirius_trust_wb_scan_dashboard_data',
    ),
  );

  $plugins['trust_worker_election'] = array(
    'title' => 'Trust: Worker: Election',
    'description' => '',
    'file' => 'sirius_trust.dashboard_worker_election.inc',
    'module' => 'sirius_trust',
    'callbacks' => array(
      'data' => 'sirius_trust_dashboard_worker_election_data',
    ),
  );

  return $plugins;
}

/**
 * Implements hook_sirius_plugin_info
 */

function sirius_trust_sirius_plugin_info($class) {
  if ($class == 'trust_provider_edi') {
    sirius_require('sirius_trust', 'sirius_trust.provider_edi.root.inc');

    $items = array();
    Sirius_Trust_Provider_Edi::getInstance()->setInfo($items);
    return $items;
  }
}

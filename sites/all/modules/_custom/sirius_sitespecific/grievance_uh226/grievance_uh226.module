<?php

// I hate notice errors
ini_set('error_reporting', ini_get('error_reporting') & ~E_NOTICE);

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'grievance_uh226') . "/grievance_uh226.report_spi_term_summary.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'grievance_uh226') . "/grievance_uh226.report_spi_term_detail.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'grievance_uh226') . "/grievance_uh226.report_violation.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'grievance_uh226') . "/grievance_uh226.report_weekly_summary.inc";

/**
 * Implements hook_permission()
 */

function grievance_uh226_permission() {
  return array(
    'grievance uh226 report summary' => array(
      'title' => t('Grievance UH226 Summary Report Access'), 
      'description' => '',
    ),
    'grievance uh226 report spi term summary' => array(
      'title' => t('Grievance UH226 SPI / Term Summary Report Access'), 
      'description' => '',
    ),
    'grievance uh226 report spi term detail' => array(
      'title' => t('Grievance UH226 SPI Term Detail Report Access'), 
      'description' => '',
    ),
  );
}

/**
 * implements hook_node_view()
 * 
 * Silly function to hide comments from the print view if they have 
 * the word "Array" in them.
 */

function grievance_uh226_node_view($node, $view_mode, $langcode) {
  if ($node->type != 'grievance') { return; }
  if (!isset($node->field_grievance_comments)) { return; }
  if (!isset($node->field_grievance_comments['und'][0]['value'])) { return; }
  if (!preg_match('/Array/', $node->field_grievance_comments['und'][0]['value'])) { return; }
  
  drupal_add_css(
    '@media print { .group-grievance-comments { display: none; } }',
    array('type' => 'inline')
  );
}

function grievance_uh226_menu() {
  $items = array();

  $items['grievance/report/custom/uh226-report-summary'] = array(
    'title' => 'Weekly Summary Report',
    'description' => '',
    'page callback' => 'grievance_uh226_report_summary',
    'page arguments' => array(),
    'access arguments' => array('grievance uh226 report summary'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['grievance/report/custom/uh226-spi-term-summary'] = array(
    'title' => 'Report: SPI and Term Summary',
    'description' => '',
    'page callback' => 'grievance_uh226_report_spi_term_summary',
    'page arguments' => array(),
    'access arguments' => array('grievance uh226 report spi term summary'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['grievance/report/custom/uh226-spi-term-detail'] = array(
    'title' => 'Report: SPI and Term Detail',
    'description' => '',
    'page callback' => 'grievance_uh226_report_spi_term_detail',
    'page arguments' => array(),
    'access arguments' => array('grievance uh226 report spi term summary'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['grievance/report/custom/uh226-violation'] = array(
    'title' => 'Report: Violation',
    'description' => '',
    'page callback' => 'grievance_uh226_report_violation',
    'page arguments' => array(),
    'access arguments' => array('grievance uh226 report spi term summary'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function grievance_uh226_report_cache_info() {
  $items = array();

  $items['grievance-uh226-report-spi-term-summary'] = array(
    'name' => t('UH226: SPI / Term Summary Report'),
    'description' => '',
    'access' => 'grievance uh226 report spi term summary',
    'path' => 'grievance/report/custom/uh226-spi-term-summary',
    'fields' => grievance_uh226_report_spi_term_summary_fields(),
    'pk_list_callback' => 'grievance_uh226_report_spi_term_summary_pks',
    'batch_callback' => 'grievance_uh226_report_spi_term_summary_batch',
    'render_callbacks' => array(
      'Summary By Specialist' => 'grievance_uh226_report_spi_term_summary_render_specialist',
      'Summary By Employer' => 'grievance_uh226_report_spi_term_summary_render_employer',
    ),
  );

  $items['grievance-uh226-report-spi-term-detail'] = array(
    'name' => t('UH226: SPI / Term Detail Report'),
    'description' => '',
    'access' => 'grievance uh226 report spi term detail',
    'path' => 'grievance/report/custom/uh226-spi-term-detail',
    'fields' => grievance_uh226_report_spi_term_detail_fields(),
    'pk_list_callback' => 'grievance_uh226_report_spi_term_detail_pks',
    'batch_callback' => 'grievance_uh226_report_spi_term_detail_batch',
    'render_callbacks' => array(
      'Detail By Specialist' => 'grievance_uh226_report_spi_term_detail_render_specialist',
      'Detail By Employer' => 'grievance_uh226_report_spi_term_detail_render_employer',
    ),
  );

  $items['grievance-uh226-report-violation'] = array(
    'name' => t('UH226: Violation Report'),
    'description' => '',
    'access' => 'grievance uh226 report spi term detail',
    'path' => 'grievance/report/custom/uh226-violation',
    'fields' => grievance_uh226_report_violation_fields(),
    'pk_list_callback' => 'grievance_uh226_report_violation_pks',
    'batch_callback' => 'grievance_uh226_report_violation_batch',
    'render_callbacks' => array(
      'Summary' => 'grievance_uh226_report_violation_render_summary',
    ),
  );

  return $items;
}



/**
 * Implements hook_node_validate
 *
 * Provide some custom validations on insert only
 */

function grievance_uh226_node_validate($node, $form, &$form_state) {
  // Don't run on ajax callbacks
  if (!$form_state['submitted']) { return; }

  // For grievance nodes only
  if ($node->type == 'grievance') {

    // For insert only
    if (!$node->nid) {

      // Require a category
      $category_tid = $node->field_grievance_category['und'][0]['tid'];
      if (!$category_tid) {
        form_set_error('field_grievance_category', 'Please select a grievance category.');
      }
      $category_term = taxonomy_term_load($category_tid);

      // For discipline only
      if ($category_term && $category_term->name == 'Discipline') {
        // Require one of the fields "grievance_date_1" and "grievance_date_1"
        $ts1 = sirius_date_ts($node, 'field_grievance_date_1');
        $ts2 = sirius_date_ts($node, 'field_grievance_date_2');
        if (!$ts1 && !$ts2) {
          form_set_error('field_grievance_date_1', t('For discipline grievances, please enter an incident date or a discipline date.'));
          form_set_error('field_grievance_date_2', '');
        }

        // Require at least one of the grievance_intake_log_ fields (not native node fields)
        $found = FALSE;
        for ($i=1; $i<10; ++$i) {
          if ($node->{"grievance_intake_log_$i"}) {
            $found = TRUE;
            break;
          }
        }
        if (!$found) {
          form_set_error("grievance_intake_log_1", t('For discipline grievances, please enter at least one of the discipline dates.'));
          for ($i=2; $i<10; ++$i) {
            form_set_error("grievance_intake_log_$i", '');
          }
        }
      }
    }
  }
}
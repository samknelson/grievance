<?php

sirius_require('sirius', 'Sirius/Batchrunner.inc');
sirius_require('sirius', 'Sirius/Batchrunner_Node.inc');

function sirius_smf_node_tab_oneoff_dentwell_election_3_form($form, &$form_state, $election_node) {
	$form_state['election_nid'] = $election_node->nid;

	$form['#tree'] = TRUE;
	$form['mode'] = array(
		'#type' => 'select',
		'#title' => t('Mode'),
		'#options' => array(
			'test' => t('Test'),
			'live' => t('Live'),
		),
		'#require' => TRUE,
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);

  $log = sirius_minilog_render_html();
  if ($log) { $form['results'] = array('#markup' => '<hr>' . $log); }

	return $form;
}

function sirius_smf_node_tab_oneoff_dentwell_election_3_form_submit($form, &$form_state) {
	$form_state['rebuild'] = TRUE;
	$election_node = node_load($form_state['election_nid']);
	$mode = $form_state['values']['mode'];

	$runner = Sirius_Smf_Batchrunner_Oneoff_Dentwell_Election_3::getInstance();
	$context = array('mode' => $form_state['values']['mode']);
	return $runner->process_record($form_state['election_nid'], $context);
	// return $runner->process_batch($context);
	// return sirius_smf_oneoff_linked_benefit($form_state['values']['mode'], $election_node);
}

class Sirius_Smf_Batchrunner_Oneoff_Dentwell_Election_3 extends Sirius_Batchrunner_Node {
	public $type = 'smf_oneoff_dentwell_election_3';
	public $name = 'Sirius_Smf_Oneoff_Dentwell_Election_3';




	public function get_next_batch(&$context = array()) {
		$batch_size = $this->batch_size($context);
		$last_pk = $this->last_pk($context);
		$all_worker_nids = $this->worker_nids();

		$pks = array();
		$count = 0;
		foreach ($all_worker_nids as $worker_nid) {
			if ($worker_nid < $last_pk) { continue; }
			$pks[] = $worker_nid;
			++$count;
			if ($count >= $batch_size) { break; }
		}

		return $pks;
	}

	public function grand_total_pending(&$context = array()) {
		$all_worker_nids = $this->worker_nids();
		$last_pk = $this->last_pk($context);
		$all_worker_nids = $this->worker_nids();

		foreach ($all_worker_nids as $worker_nid) {
			if ($worker_nid < $last_pk) { continue; }
			++$count;
		}

		return $count;
	}






	public function content_type_impl(&$context = array()) {
		return 'sirius_trust_worker';
	}

	public function process_record_impl($worker_node, &$context = array()) {
		$lookups = &drupal_static(__FUNCTION__);
		if (!isset($lookups['delta'])) {
			$lookups['delta'] = sirius_find_nid_by_id('D', 'sirius_trust_benefit');
			$lookups['dentwell'] = sirius_find_nid_by_id('LADC', 'sirius_trust_benefit');
		}
		if (!$lookups['delta'] || !$lookups['dentwell']) {
			sirius_minilog("Didn't find benefit NID for dentwell or delta.", 'error');
			return;
		}

		$prior_election_node = sirius_trust_worker_election($worker_node);
		if (!$prior_election_node) {
			sirius_minilog("No currently active election found. Skipping.");
			return array('success' => TRUE);
		}

		if (!in_array($lookups['delta'], sirius_fieldvals($prior_election_node, 'field_sirius_trust_benefits', 'target_id'))) {
			sirius_minilog("Worker did not have delta previously.");
			return array('success' => TRUE);
		}

		global $user;
	  $new_election_node = new stdClass();
	  $new_election_node->type = 'sirius_trust_worker_election';
	  $new_election_node->language = LANGUAGE_NONE;
	  $new_election_node->uid = $user->uid;
	  $new_election_node->status = 1;
	  $new_election_node->promote = 0;
	  $new_election_node->comment = 0;

	  foreach ($prior_election_node as $key => $val) {
	  	if (!preg_match('/^field/', $key)) { continue; }
	  	$new_election_node->{$key} = $val;
	  }

		$new_election_node->field_sirius_date_start['und'][0]['value'] = date('Y-m-d') . ' 00:00:00';
		$prior_election_node->field_sirius_date_end['und'][0]['value'] = date('Y-m-d', strtotime('-1 day')) . ' 00:00:00';
		foreach ($new_election_node->field_sirius_trust_benefits['und'] as $delta => $ignore) {
			if ($new_election_node->field_sirius_trust_benefits['und'][$delta]['target_id'] == $lookups['delta']) {
				$new_election_node->field_sirius_trust_benefits['und'][$delta]['target_id'] = $lookups['dentwell'];
			}
		}

		if ($mode != 'live') {
			sirius_minilog("(Skipping save because mode = $mode)");
			return array('success' => TRUE);
		}

		node_save($prior_election_node);
		node_save($new_election_node);
		sirius_minilog("*** Election saved: " . $new_election_node->title . ' (' . $new_election_node->nid . ')');
		++$lookups['count'];

		node_save($election_node);
	}

	public function worker_nids() {
		$nids = array(11384208, 11463320, 11481312, 11482793, 11482797, 11482801, 11482804, 11482807, 11766664, 11800720, 11805834, 11808419, 11808471, 11808475, 12019238, 12044453, 12074436, 12093183, 12110914, 12122028, 12122751, 12130226, 12131748, 12131752, 12131756, 12131759, 12131844, 12132195, 12362694, 12371047, 12409495, 12509916, 12509920, 12664058, 12664901, 12775534, 12777866, 12777870, 12777874, 12777878, 12777881, 12777977, 13099610, 13109637, 13109696, 13109700, 13257458, 13259268, 13259377, 13260597, 13261567, 13261618, 13261978, 13262645, 13263590, 13264159, 13265028, 13267252, 13278238, 13283639, 13288314, 13294614, 13299619, 13309693, 13326785, 13327776, 13329890, 13330624, 13334021, 13336663, 13337419, 13339640, 13339957, 13343089, 13343187, 13345618, 13346446, 13352182, 13354341, 13357387, 13362725, 13364981, 13368296, 13369056, 13371537, 13373327, 13376642, 13377045, 13379331, 13380036, 13381396, 13381495, 13382646, 13383066, 13383261, 13383691, 13383923, 13383982, 13384039, 13384199, 13384937, 13385154, 13411135, 13411163, 13411167, 13411171, 13411286, 13411488, 13412000, 13412004, 13412007, 13412044, 13412048, 13412051, 13412281, 13412285, 13412289, 13412318, 13412542, 13412546, 13412550, 13412922, 13412927, 13413058, 13413062, 13413067, 13413332, 13413336, 13413464, 13413642, 13413711, 13413716, 13413753, 13413757, 13413760, 13413763, 13413766, 13413769, 13413908, 13413912, 13413983, 13414008, 13414091, 13414290, 13414294, 13414297, 13414300, 13414331, 13414689, 13414741, 13414745, 13414749, 13414752, 13414769, 13415247, 13415458, 13415510, 13415519, 13415523, 13415527, 13415687, 13415748, 13415752, 13415775, 13415779, 13415783, 13534834, 13589100, 13639834, 13789495, 13789674, 13789703, 13789744, 13789752, 13789904, 13790398, 13790402, 13790460, 14485153, 14622584, 14622588, 14622677, 14622898, 14951992, 15013282, 15033746, 15033750, 15033754, 15033757, 15033760, 15033763, 15033786, 15034014, 15535476, 15535633, 15598419, 15826789, 15827342, 15827923, 15828248, 15838071, 15932982, 15963908, 16242003, 16243606, 16244746, 16244748, 16244941, 16245194, 16246174, 16246176, 16246178, 16248985, 16249370, 16249373, 16249375, 16254353, 16254744, 16254982, 16255098, 2498799, 2498877, 2499981, 2503428, 2504349, 2509894, 2510675, 2513243, 2515783, 2516893, 2521820, 2521955, 2523465, 2523479, 2523790, 2526077, 2528136, 2528490, 2528700, 2530110, 2530539, 2532209, 2532272, 2532451, 2533273, 2534311, 2534784, 2536379, 2536461, 2540547, 2541658, 2542342, 2544111, 2544548, 2545465, 2549889, 2553122, 2557387, 2557493, 2557656, 2560401, 2565441, 2565696, 2567326, 2569059, 2569230, 2569698, 2571385, 2572395, 2573279, 2573645, 2573654, 2575205, 2575506, 2578151, 2578787, 2579760, 2580283, 2580290, 2582564, 2582906, 2583384, 2584083, 2584772, 2584995, 2585105, 2585517, 2585536, 2588315, 2588720, 2590081, 2590226, 2590428, 2590974, 2590989, 2593499, 2595072, 2595948, 2596363, 2596585, 2596841, 2597884, 2598936, 2598945, 2599928, 2600294, 2600330, 2602339, 2602666, 2602713, 2602986, 2603426, 2607892, 2609113, 2611853, 2615591, 2618103, 2618477, 2620149, 2620660, 2621334, 2621487, 2622290, 2623192, 2623736, 2624398, 2625217, 2625346, 2625455, 2626001, 2626665, 2626908, 2627138, 2630248, 2630968, 2631333, 2631573, 2632641, 2633784, 2634302, 2634407, 2634450, 2634696, 2634910, 2635714, 2636117, 2638098, 2638287, 2639110, 2639190, 2639775, 2639861, 2641302, 2641498, 2641710, 2642086, 2642313, 2642366, 2642823, 2643087, 2643401, 2644966, 2646117, 2647325, 2647627, 2648017, 2648218, 2648415, 2650391, 2650405, 2652372, 2653971, 2657218, 2657438, 2658654, 2660276, 2660860, 2664247, 2674824, 2682165, 2682527, 2684706, 2687641, 2693553, 2699603, 2726755, 2778224, 2780048, 2789192, 2801765, 2803078, 2804860, 2810047, 2810247, 2816315, 2816786, 2819335, 2822224, 2823878, 2826908, 2827801, 2829289, 2865579, 2871554, 2878688, 2880448, 2880450, 2880601, 2880724, 2881254, 2881304, 2881395, 2881752, 2881972, 2882894, 2883079, 2883985, 2884288, 2884512, 2885176, 2885734, 2887503, 2887741, 2887980, 2888675, 2891650, 2892596, 2892908, 2893053, 2893527, 2893992, 2894916, 2895028, 2895209, 2895525, 2895543, 2895724, 2896729, 2897432, 2898232, 2898767, 2898858, 2899087, 2902343, 2902586, 2903421, 2903574, 2903940, 2905497, 2906126, 2906374, 2906401, 2906656, 2907813, 2908358, 2908566, 2908656, 2908829, 2912164, 2913805, 2914183, 2914761, 2915140, 2916762, 2917232, 2917353, 2919582, 2920534, 2920615, 2921582, 2922944, 2923775, 2924675, 2925375, 2925402, 2925786, 2925890, 2926832, 2928956, 2929167, 2930915, 2931136, 2931715, 2931893, 2932539, 2934190, 2934706, 2935854, 2937149, 2937405, 2937673, 2938555, 2939179, 2940092, 2940367, 2940895, 2941286, 2941398, 2941427, 2941674, 2942553, 2942817, 2943198, 2944222, 2944407, 2945626, 2945812, 2946164, 2946204, 2946707, 2946934, 2947333, 2947505, 2947729, 2948528, 2948911, 2949634, 2950321, 2950699, 2950718, 2952676, 2952962, 2953278, 2953702, 2953712, 2953832, 2954131, 2954200, 2955321, 2956522, 2956976, 2957014, 2957709, 2957729, 2957997, 2958011, 2958029, 2958367, 2958600, 2958905, 2959176, 2959539, 2959677, 2961223, 2962815, 2962855, 2963008, 2964369, 2964737, 2965242, 2965530, 2965996, 2966033, 2967086, 2967314, 2968847, 2969159, 2970037, 2971109, 2971563, 2972376, 2972459, 2973672, 2974154, 2974264, 2974974, 2975220, 2975954, 2976055, 2976148, 2977119, 2977414, 2977862, 2977998, 2978502, 2979501, 2979717, 2979858, 2980212, 2980530, 2981418, 2981756, 2982339, 2983028, 2984178, 2985058, 2985245, 2985362, 2985383, 2986060, 2986766, 2987167, 2987285, 2988184, 2988408, 2988837, 2989059, 2989532, 2990596, 2991078, 2991284, 2991393, 2992823, 2993473, 2993740, 2994016, 2994841, 2995349, 2995851, 2995959, 2996518, 2996738, 2997210, 2998238, 2998639, 2999179, 2999190, 2999706, 3000314, 3000670, 3000749, 3000826, 3001365, 3001730, 3002085, 3002586, 3003024, 3003599, 3003800, 3003808, 3004415, 3004433, 3004535, 3004656, 3004729, 3004741, 3005394, 3005437, 3005459, 3005497, 3005935, 3006293, 3006296, 3006426, 3007531, 3007718, 3008480, 3009289, 3009323, 3010734, 3011751, 3012176, 3016108, 3016202, 3016839, 3016851, 3018031, 3018489, 3018921, 3019500, 3020154, 3021851, 3022187, 3022326, 3022450, 3022680, 3022829, 3022888, 3023018, 3023268, 3023322, 3023510, 3025371, 3025778, 3026059, 3026536, 3027322, 3027520, 3027778, 3028174, 3028320, 3028415, 3028458, 3028681, 3028799, 3028881, 3029030, 3029516, 3029870, 3030170, 3030535, 3030933, 3030985, 3031127, 3031440, 3032066, 3032203, 3032327, 3032659, 3032860, 3033225, 3033386, 3033488, 3033850, 3033875, 3034203, 3034301, 3034360, 3034721, 3034785, 3034858, 3035491, 3035665, 3035861, 3036821, 3037184, 3037247, 3037386, 3037450, 3037677, 3037709, 3038282, 3038522, 3048437, 3077122, 3077229, 3089920, 3092007, 3093937, 3095679, 3096016, 3103373, 3103433, 3110573, 3111185, 3111541, 3112768, 3112855, 3114912, 3116129, 3116133, 3118629, 3118850, 3119034, 3119275, 3119279, 3119283, 3119745, 3119805, 3119918, 3119922, 3120062, 3120066, 3120401, 3121401, 3122928, 3122932, 3123023, 3123637, 3123641, 3123645, 3125107, 3125111, 3126325, 3126329, 3126622, 3127072, 3127357, 3129366, 3129370, 3129373, 3129459, 3129526, 3129954, 3130776, 3131506, 3131821, 3131825, 3131828, 3132524, 3135170, 3135177, 3135814, 3135818, 3135822, 3135825, 3135828, 3136069, 3136284, 3136288, 3136880, 3137411, 3138008, 3138012, 3138528, 3138532, 3138857, 3141277, 3141280, 3142456, 3143160, 3143579, 3143583, 3143680, 3143684, 3144366, 3145158, 3145241, 3145944, 3147018, 3148047, 3148939, 3149740, 3149947, 3150164, 3150587, 3150595, 3151008, 3151012, 3151113, 3151117, 3151859, 3152567, 3153031, 3153035, 3153394, 3153535, 3153539, 3153571, 3153579, 3153582, 3153784, 3154081, 3154839, 3155546, 3155550, 3155554, 3155985, 3156890, 3156894, 3156898, 3156901, 3157218, 3157356, 3157466, 3157470, 3157786, 3157790, 3158780, 3158822, 3159149, 3159157, 3160124, 3160227, 3160617, 3160674, 3160678, 3160710, 3160714, 3160866, 3161143, 3161147, 3161150, 3161273, 3161710, 3162044, 3163110, 3163123, 3163197, 3163313, 3163388, 3163394, 3164411, 3164608, 3164864, 3165219, 3165227, 3165412, 3165510, 3165514, 3165518, 3165831, 3165834, 3166284, 3166658, 3167475, 3168069, 3168080, 3168998, 3169318, 3169836, 3169840, 3170139, 3170590, 3170665, 3170673, 3170917, 3170928, 3171679, 3171998, 3172002, 3172006, 3172571, 3172715, 3173872, 3173876, 3173880, 3173883, 3173886, 3173928, 3174146, 3174562, 3174623, 3174627, 3176072, 3176078, 3176291, 3176299, 3176302, 3176959, 3177065, 3177073, 3177302, 3177306, 3178323, 3178331, 3178569, 3179211, 3179714, 3179718, 3179847, 3179851, 3179855, 3179858, 3179935, 3179939, 3181111, 3181373, 3182088, 3182171, 3182177, 3182624, 3183657, 3183661, 3183665, 3184005, 3184119, 3184123, 3184127, 3185032, 3185322, 3185445, 3186567, 3186994, 3186998, 3187268, 3187466, 3187470, 3188582, 3189406, 3189410, 3189414, 3189418, 3189881, 3189885, 3189888, 3190094, 3190097, 3190452, 3190456, 3190460, 3190463, 3190868, 3191178, 3191182, 3191299, 3191357, 3192100, 3192104, 3192345, 3192353, 3192356, 3192557, 3192565, 3192734, 3192937, 3193444, 3193448, 3193886, 3193976, 3193980, 3194005, 3194151, 3194358, 3194362, 3195471, 3195479, 3195893, 3196428, 3196942, 3197278, 3198371, 3198375, 3199143, 3199147, 3199314, 3200074, 3201491, 3201806, 3201815, 3202047, 3202055, 3202127, 3202448, 3202464, 3202670, 3205383, 3205419, 3205427, 3205697, 3205715, 3205920, 3206107, 3206263, 3206267, 3206271, 3206290, 3206294, 3206592, 3207726, 3207730, 3208327, 3208331, 3209081, 3209085, 3209343, 3209347, 3209351, 3209561, 3209894, 3210371, 3211274, 3211278, 3211873, 3211996, 3212000, 3212004, 3212307, 3212311, 3212315, 3212379, 3212451, 3212724, 3213122, 3213261, 3213265, 3213269, 3213594, 3213868, 3213872, 3213876, 3214376, 3214380, 3214384, 3214387, 3214447, 3215334, 3215342, 3215345, 3215563, 3215571, 3215596, 3215772, 3305327, 3305331, 3305334, 3305337, 3310573, 3310576, 3312221, 3314288, 3314991, 3320043, 3320111, 3320114, 3320118, 3323948, 3330388, 3330517, 3330520, 3333418, 3335982, 3335986, 3335989, 3383102, 3431811, 5898813, 5900074, 5901151, 5927641, 5943976, 5955541, 5959356, 5962417, 5964481, 5969783, 5975793, 5976858, 5978828, 5979291, 6234193, 6234926, 6235080, 6235090, 6235746, 6326806, 6327124, 6335478, 6359832, 6361749, 6364196, 6364638, 6364671, 6364674, 6364678, 6364681, 6448872, 6449577, 6461001, 6513908, 6514512, 6515400, 6515449, 6515661, 6633039, 6633054, 6633108, 6633118, 6633542, 6633796, 6634602, 6634642, 6634654, 6634792, 6635154, 6635256, 6636000, 6654171, 6655098, 6712136, 6746812, 6748280, 6764453, 7031540, 7043060, 7064723, 7080735, 7081635, 7088549, 7088553, 7088661, 7091373, 7099731, 7100468, 7102003, 7102007, 7159509, 7161180, 7161184, 7163728, 7163732, 7166862, 7166866, 7166870, 7167908, 7168081, 7169877, 7169880, 7169883, 7170821, 7171372, 7171913, 7172027, 7172031, 7294317, 7305455, 7317887, 7319972, 7320793, 7320904, 7648169, 7675160, 7757470, 7795420, 7795424, 8043507, 8046354, 8050924, 8052536, 8070725, 8092506, 8102316, 8103528, 8109809, 8112070, 8122252, 8127094, 8127718, 8128179, 8130026, 8136656, 8137838, 8140689, 8144390, 8150851, 8151927, 8152729, 8153028, 8157586, 8195255, 8195828, 8195832, 8195835, 8195867, 8195871, 8195875, 8196394, 8196398, 8196402, 8196984, 8198922, 8200627, 8200632, 8200907, 8200911, 8200949, 8729847, 8731897, 8731901, 8732884, 8917325, 8967352, 8975539, 9021642, 9026678, 9026682, 9026685, 9026702, 9034773, 9035848, 9035891);
		sort($nids);
		return $nids;
	}
}

<?php

// I hate notice errors
ini_set('error_reporting', ini_get('error_reporting') & ~E_NOTICE);

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.menu.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.permission.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.message_text.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.facility.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.dnc.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.skills.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.twilio.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.worker.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.job.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.elig.fetch.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.elig.explain.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.elig.cache.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.elig.plugins.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.policy.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.run.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.hfe.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.threestrikes.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.notify.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.group.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.eba.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.vbo.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.dispstatus.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.rollover.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.payrate.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.fore.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.stub.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.sched.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.type.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.search.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.emphist.inc';

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_accept.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_decline.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_undecline.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_notify.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_resign.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_terminate.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_rollover.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_create.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_expire.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_send.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.actions_vlri.inc';

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.report_member_status_ratios.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.report_notification_preferences.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.report_prior_employed_list.inc';

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_landing.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_manage.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_manage.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_bullpen.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_events.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_dispatches.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_dispatch_facility_halls.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_operator.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_view.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_worker_dnc.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_worker_dispatches.inc';
// require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_worker_dispatch_preferences.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_worker_dispatch_status.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_employer_dispatch_preferences.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_employer_dispatch_attachments.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_attachments.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_jwa_assign.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_employer_landing.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_create.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_create_intro.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_job_fore.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_employer_job_list.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.page_employer_payrate.inc';

require_once DRUPAL_ROOT . '/sites/all/modules/_custom/sirius_dispatch/sirius_dispatch.term_tab_industry.inc';

/**
 * Implements hook_cron
 */

function sirius_dispatch_cron() {
  sirius_dispatch_run_all();
  sirius_dispatch_threestrikes_cron();
}

/**
 * Implements hook_sirius_domain_component_info
 */

function sirius_dispatch_sirius_domain_component_info() {
  return array(
    'dispatch:emphist' => array(
      'title' => 'Dispatch - Employment History',
      'description' => 'Use the "Employment History" framework to view or edit historical work',
    ),
    'dispatch:live' => array(
      'title' => 'Dispatch - Live',
      'description' => 'Perform "Live" dispatches, allowing workers to accept and decline dispatch notifications.',
    ),
  );
}

/**
 * Implements hook_sirius_cron_scan_info()
 */

function sirius_dispatch_sirius_cron_scan_info() {

  $items['dispatch_eba_remove_expired_dates'] = array(
    'title' => 'Dispatch EBA Remove Expired Dates',
    'description' => 'Clean up any EBA dates for workers that are in the past.',
    'schedule' => 'daily',
    'callback' => 'sirius_dispatch_eba_remove_expired_dates',
    'multidomain' => FALSE,
    'component' => 'dispatch:live',
  );

  $items['dispatch_eba_layoff_expired_dispatches'] = array(
    'title' => 'Dispatch EBA Layoff Expired Dispatches',
    'description' => 'Lay off any workers who are on secondary EBA dispatches, when the date has passed.',
    'schedule' => 'daily',
    'callback' => 'sirius_dispatch_eba_layoff_expired_dispatches',
    'multidomain' => FALSE,
    'component' => 'dispatch',
  );

  $items['dispatch_elig_cache_cleanup'] = array(
    'title' => 'Dispatch Eligibility Cache',
    'description' => 'Clean up the dispatch eligibility cache.',
    'schedule' => 'daily',
    'callback' => 'sirius_dispatch_elig_cache_cleanup',
    'multidomain' => FALSE,
    'component' => 'dispatch:live',
  );

  $items['dispatch_layoff_expired_jobs'] = array(
    'title' => 'Dispatch Layoff Expired Jobs',
    'description' => 'Lay off all workers from jobs that are past their end date.',
    'schedule' => 'hourly',
    'callback' => 'sirius_dispatch_layoff_expired_jobs',
    'multidomain' => FALSE,
    'component' => 'dispatch:live',
  );

  $items['dispatch_layoff_secondary_without_primary'] = array(
    'title' => 'Dispatch Layoff Secondary Without Primary',
    'description' => 'Lay off all secondary dispatches if the worker does not have a primary dispatch and if the job type has the appropriate flag set.',
    'schedule' => 'hourly',
    'callback' => 'sirius_dispatch_layoff_secondary_without_primary',
    'multidomain' => FALSE,
    'component' => 'dispatch:live',
  );

  return $items;
}

/**
 * Implements hook_node_presave
 */

function sirius_dispatch_node_presave($node) {
	if ($node->type == 'sirius_dispatch' || $node->type == 'sirius_worker') { 
    sirius_aat_set($node);
  }

  if ($node->type == 'sirius_dispatch') {
    sirius_dispatch_payrate_compute($node);
    sirius_dispatch_type_compute($node);

    $title = sirius_node_title($node->field_sirius_worker['und'][0]['target_id']);
    $title .= ': ';
    $title .= 'Dispatch';
    if ($node->nid) {
      $title .= ' #' . $node->nid;
    }
    $node->title = $title;
  }
}

function sirius_dispatch_get_current($worker_nid) {
	$query = new EntityFieldQuery;
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', 'sirius_dispatch');
  $query->fieldCondition('field_sirius_worker', 'target_id', $worker_nid);
  $query->fieldCondition('field_sirius_dispatch_status', 'value', 'accepted');
  $query->propertyOrderBy('created', 'desc');
  $stmt = $query->execute();
  if (!$stmt['node']) {
  	return NULL;
  }

  return node_load(array_keys($stmt['node'])[0]);
}

function sirius_dispatch_get($worker_nid, $job_nid) {
  $query = new EntityFieldQuery;
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', 'sirius_dispatch');
  $query->fieldCondition('field_sirius_worker', 'target_id', $worker_nid);
  $query->fieldCondition('field_sirius_dispatch_job', 'target_id', $job_nid);
  $query->propertyOrderBy('created', 'desc');
  $stmt = $query->execute();
  if (!$stmt['node']) {
    return NULL;
  }

  return node_load(array_keys($stmt['node'])[0]);
}

/**
 * Implements hook_node_update
 */

function sirius_dispatch_node_update($node) {
  if ($node->sirius_nohook) { return; }
  if ($node->type == 'sirius_dispatch') {
    sirius_dispatch_job_recompute_from_dispatch($node);
    sirius_dispatch_worker_recompute_from_dispatch($node);
    sirius_dispatch_notify_employer_dispatch($node);
  }

  if ($node->type == 'sirius_dispatch_job') {
    sirius_dispatch_notify_employer_job($node);
  }

  if ($node->type == 'sirius_worker') {
    sirius_dispatch_worker_recompute_from_work_status($node);
  }
}

/**
 * Implements hook_node_insert
 */

function sirius_dispatch_node_insert($node) {
  if ($node->sirius_nohook) { return; }
  if ($node->type == 'sirius_dispatch') {
    sirius_dispatch_job_recompute_from_dispatch($node);
    sirius_dispatch_worker_recompute_from_dispatch($node);
  }
}

/**
 * Implements hook_node_delete
 */

function sirius_dispatch_node_delete($node) {
  if ($node->type == 'sirius_dispatch') {
    sirius_dispatch_job_recompute_from_dispatch($node, TRUE);
    sirius_dispatch_worker_recompute_from_dispatch($node, TRUE);
  }
}

/***
 * Implements hook_report_cache_info() 
 */

function sirius_dispatch_report_cache_info() {
  sirius_require('sirius_dispatch', 'sirius_dispatch.report_job_status.inc');

  $items = array();

  Sirius_Dispatch_Report_Job_Status::getInstance()->setInfo($items);

  $items['sirius-dispatch-member-status-ratios'] = array(
    'name' => t('Member Status Ratios'),
    'description' => '',
    'access' => 'sirius dispatch admin',
    'fields' => sirius_dispatch_report_member_status_ratios_fields(),
    'form_callback' => 'sirius_dispatch_report_member_status_ratios_form',
    'pk_list_callback' => 'sirius_dispatch_report_member_status_ratios_pks',
    'batch_callback' => 'sirius_dispatch_report_member_status_ratios_batch',
    'render_callbacks' => array(
      'Ratio' => 'sirius_dispatch_report_member_status_ratios_view',
    ),
  );

  $items['sirius-dispatch-notification_preferences'] = array(
    'name' => t('Notification Preferences'),
    'description' => '',
    'access' => 'sirius dispatch admin',
    'fields' => sirius_dispatch_report_notification_preferences_fields(),
    'form_callback' => 'sirius_dispatch_report_notification_preferences_form',
    'pk_list_callback' => 'sirius_dispatch_report_notification_preferences_pks',
    'batch_callback' => 'sirius_dispatch_report_notification_preferences_batch',
  );

  $items['sirius-dispatch-prior-employed-list'] = array(
    'name' => t('Prior Employed List'),
    'description' => '',
    'access' => 'sirius dispatch admin',
    'fields' => sirius_dispatch_report_prior_employed_list_fields(),
    'form_callback' => 'sirius_dispatch_report_prior_employed_list_form',
    'pk_list_callback' => 'sirius_dispatch_report_prior_employed_list_pks',
    'batch_callback' => 'sirius_dispatch_report_prior_employed_list_batch',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */

function sirius_dispatch_block_info() {
  $blocks = array();
  $blocks['sirius_dispatch_listcounts'] = array(
    'info' => t('Sirius Dispatch List Counts'),
    'cache' => DRUPAL_NO_CACHE,
  );      
  return $blocks;
}

/**
 * Implements hook_block_view().
 */

function sirius_dispatch_block_view($delta = '') {
  if ($delta == 'sirius_dispatch_listcounts') {
    return sirius_dispatch_listcounts_block_view();
  }
}

function sirius_dispatch_listcounts_block_view() {
  $html = '';

  $industries = array();
  if (user_access('sirius dispatch staff')) {
    $industries = sirius_taxonomy_load('sirius_industry', 'tid', 'full');
  } else {
    $employer_node = sirius_employer_get($uid);
    if (!$employer_node) { return array(); }
    $industry_tids = sirius_fieldvals($employer_node, 'field_sirius_industry', 'tid');
    if (!$industry_tids) { return array(); }
    $industries = taxonomy_term_load_multiple($industry_tids);
  }
  if (!$industries) { return array(); }

  // Get the open lists
  global $user;
  $user_full = user_load($user->uid);
  $include_closed = user_access('sirius dispatch staff');

  foreach ($industries as $industry_tid => $industry_term) {
    $industry_is_empty = TRUE;
    $industry_html = '<h2>' . $industry_term->name . '</h2>';

    $open_statuses = sirius_worker_member_status_get_open_statuses($industry_tid, $include_closed);
    $job_node = new stdClass();
    $job_node->title = "Dummy";
    $job_node->type = 'sirius_dispatch_job';
    $job_node->language = LANGUAGE_NONE;
    $job_node->uid = $user->uid;
    $job_node->status = 1;
    $job_node->promote = 0;
    $job_node->comment = 0;
    $job_node->field_grievance_shop['und'][0]['target_id'] = 0;
    $job_node->field_sirius_dispatch_job_type['und'][0]['tid'] = sirius_get_special_tid('sirius_dispatch_job_type|OPEN');
    $job_node->field_sirius_datetime['und'][0]['value'] = date('Y-m-d H:i:s');
    $job_node->field_sirius_datetime_created['und'][0]['value'] = date('Y-m-d H:i:s');
    $job_node->field_sirius_dispatch_job_status['und'][0]['value'] = 'Pending';
    $job_node->field_sirius_industry['und'][0]['tid'] = $industry_tid;
    $industry_html .= '<ul>';
    foreach ($open_statuses as $status_tid => $status_term) {
      $job_node->field_sirius_member_status['und'] = array(array('tid' => $status_tid));
      $count = sirius_dispatch_elig_fetch(
        $job_node, 
        $worker_node->nid,
        0,
        array(
          'ignore_skill' => TRUE,
          'ignore_department' => TRUE,
          'ignore_cbn' => TRUE,
          'count' => TRUE,
        )
      );
      if (!$count) { continue; }
      $industry_is_empty = FALSE;
      $industry_html .= '<li>' . $status_term->name . ': ' . number_format($count) . ' available workers.' . '</li>';
    }
    $industry_html .= '</ul>';

    if (!$industry_is_empty) {
      $html .= $industry_html;
    }

  }

  $block = array();
  $block['subject'] = '';
  $block['content'] = $html;
  return $block;
}

/**
 * Implements hook_file_download_access
 */

function sirius_dispatch_file_download_access($file_item, $entity_type, $entity) {
  if ($entity_type == 'node' && $entity->type == 'sirius_dispatch_job') {
    return sirius_dispatch_job_attachment_file_download_access($file_item, $entity);
  }
}

/**
 * Implements hook_node_view
 */

function sirius_dispatch_node_view($node, $view_mode, $langcode) {
  // Conceal certain fields from non-staff members
  if ($node->type == 'sirius_dispatch_job') {
    if (!user_access('sirius dispatch staff')) {
      unset($node->content['field_sirius_count_no']);
      unset($node->content['field_sirius_count_notified']);
    }
  }

  // Render the SIB status 
  if ($node->type == 'sirius_worker') {
    if (!user_access('sirius dispatch staff')) {
      $block_tid = $node->field_sirius_dispatch_sib_status['und'][0]['tid'];
      if ($block_tid) {
        $block_term = taxonomy_term_load($block_tid);
        $name_display = $block_term->field_sirius_name_display['und'][0]['value'];
        if (!$name_display) { $name_display = $block_term->name; }
        $node->content['field_sirius_dispatch_sib_status'][0]['#markup'] = $name_display;
      }
    }
  }
}

/** 
 * Implements hook_sirius_dispatch_elig_info
 */

function sirius_dispatch_sirius_dispatch_elig_info() {
  sirius_require('sirius_dispatch', 'sirius_dispatch.1for1.inc');
  sirius_require('sirius_dispatch', 'sirius_dispatch.nosecondaryatprimary.inc');

  $items = array();
  Sirius_Dispatch_1for1::getInstance()->setInfo($items);
  Sirius_Dispatch_Nosecondaryatprimary::getInstance()->setInfo($items);
  return $items;
}

function sirius_dispatch_status_options() {
  return list_allowed_values(field_info_field('field_sirius_dispatch_status'));
}

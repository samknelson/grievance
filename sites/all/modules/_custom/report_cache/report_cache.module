<?php

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'report_cache') . "/report_cache.menu.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'report_cache') . "/report_cache.form.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'report_cache') . "/report_cache.auto.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'report_cache') . "/report_cache.purge.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'report_cache') . "/report_cache.page_landing.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'report_cache') . "/report_cache.page_report.inc";
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'report_cache') . "/report_cache.page_report_generate.inc";

function report_cache_info_all() {
	$info_all = &drupal_static(__FUNCTION__, NULL);
	if (!isset($info_all)) {
		$info_all = module_invoke_all('report_cache_info');
	}
	return $info_all;
}

function report_cache_info($report_type) {
	$info_all = report_cache_info_all();
	return $info_all[$report_type];
}

function report_cache_settings($report_type, $new_settings = array()) {
	if ($new_settings) {
		sirius_domain_variable_set("sirius_report_" . $report_type . "_settings", json_encode($new_settings));
	}
	return json_decode(sirius_domain_variable_get("sirius_report_" . $report_type . "_settings"), TRUE);
}

function report_cache_access($report_type) {
	if (!$report_type) { return user_access('access site reports'); }
	$info = report_cache_info($report_type);

	if (!$info) {
		drupal_set_message("The report type $report_type is not defined.", 'error');
		return FALSE;
	}
	
	$access = $info['access'];
	if (!$access) { $access = 'grievance report'; }

	return user_access($access);
}

function report_cache_parameters($report_type, $report_id, $parameters = array()) {
 	$cache = &drupal_static(__FUNCTION__);

 	// Set?
 	if ($parameters) {
		$domain_nid = sirius_domain_nid(); if (!$domain_nid) { $domain_nid = 0; }

 		$cache[$report_type][$report_id] = $parameters;

	  $stmt = db_delete('report_cache');
		$stmt->condition('report_id', $report_id);
		$stmt->condition('report_row_pk', 'PARAMETERS');
		$stmt->condition('report_type', $report_type . ' :: PARAMETERS');
		$stmt->condition('report_domain_nid', $domain_nid);
		$stmt->execute();

	  $stmt = db_insert('report_cache');
		$stmt->fields(
			array(
				'report_id' => $report_id,
				'report_row_pk' => 'PARAMETERS',
				'report_type' => $report_type . ' :: PARAMETERS',
				'report_data' => serialize($parameters),
				'report_domain_nid' => $domain_nid,
			)
		);
		$stmt->execute();

 	}

 	if ($cache[$report_type][$report_id]) { return $cache[$report_type][$report_id]; }

  $query = db_select('report_cache');
  $query->fields('report_cache');
  $query->condition('report_id', $report_id);
  $query->condition('report_type', $report_type . ' :: PARAMETERS');
  $stmt = $query->execute();
  $hr = $stmt->fetchAssoc();
	$parameters = unserialize($hr['report_data']);

	// Quick sloppy caching. 
	// - Since we're doing a database query, we want to store the results in memory
	// - But we might be called thousands of times for different report IDs.
	// - So we only keep the first 100 results in memory.
	if (!$cache[$report_type] || (count($cache[$report_type]) < 100)) { $cache[$report_type][$report_id] = $parameters; }

	return $parameters;
}

function report_cache_most_recent($report_type) {
	$domain_nid = sirius_domain_nid(); if (!$domain_nid) { $domain_nid = 0; }
	$sql = "select distinct report_id from report_cache where report_type = :report_type and report_domain_nid = :domain_nid /* and report_id like '% Auto'*/ order by report_id desc limit 1";
	$stmt = db_query($sql, array(':report_type' => $report_type, ':domain_nid' => $domain_nid));
	$hr = $stmt->fetchAssoc();
	return $hr['report_id'];
}

<?php

// I hate notice errors
ini_set('error_reporting', ini_get('error_reporting') & ~E_NOTICE);

/**
 * Implements hook_menu
 */

function sirius_help_menu() {
  $items['sirius/modal/help-text-view/%node'] = array(
    'title' => 'Full Help Text',
    'page callback'    => 'sirius_help_modal_view',
    'page arguments'   => array(3),
    'access callback'  => 'sirius_help_modal_view_access',
    'access arguments' => array(3),
    'type'             => MENU_LOCAL_ACTION,
    'context'          => MENU_CONTEXT_INLINE,
    'modal'            => TRUE,
  );

  $items['sirius/help/publish'] = array(
    'title' => 'Publish Help to Sirius Code',
    'page callback'    => 'sirius_help_publish',
    'page arguments'   => array(),
    'access arguments' => array('sirius admin'),
    'type'             => MENU_NORMAL_ITEM,
  );

  return $items;
}

function sirius_help_publish() {
  return drupal_get_form('sirius_help_publish_form');
}

function sirius_help_publish_form($form, &$form_state) {
  $form['confirm'] = array(
    '#type' => 'checkbox',
    '#required' => TRUE,
    '#title' => t('Yes, please export all the help text on this site into the Sirius software repository.'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

function sirius_help_publish_form_submit($form, &$form_state) {
  require_once drupal_get_path('module', 'features') . '/features.drush.inc';
  $sql = "select uuid, title from node where type = 'sirius_help' order by nid";
  $stmt = sirius_sql_query($sql, array());
  $components = array();
  while ($hr = $stmt->fetchAssoc()) {
    $components[$hr['uuid']] = $hr['title'];
  }

  $chunks = array_chunk($components, 30, TRUE);
  foreach ($chunks as $chunk) {
    $cmd = 'cd ' . DRUPAL_ROOT;
    $cmd .= '; /usr/bin/drush -y --ignore-conflicts fe grievance_content_types ';

    foreach ($chunk as $uuid => $title) {
      drupal_set_message("Exporting: $uuid ($title) ...");
      $cmd .= "uuid_node:$uuid ";
    }
    $cmd .= ' 2>&1';
    drupal_set_message("Executing: $cmd");
    $lines = array();
    exec($cmd, $lines);
    drupal_set_message("Result:<br />" . join('<br />', $lines));
  }
}

/**
 * Implments hook_modal_paths
 */

function sirius_help_modal_paths() {
  $paths = array();

  $paths['sirius/modal/help-text-view/%node'] = array(
    'style' => 'sirius-help-modal-style',
  );

  return $paths;
}

function sirius_help_modal_styles() {
  $styles = array();

  $styles['sirius-help-modal-style'] = array(
    'modalSize' => array(
      'type' => 'fixed',
      'width' => 600,
      'height' => 600,
    ),
  );

  return $styles;
}

/**
 * Implements hook_permission
 */

function sirius_help_permission() {
  return array(
    'sirius help view' => array(
      'title' => t('Sirius Help View'),
      'description' => t('View Sirius Help text.'),
    ),
    'sirius help admin' => array(
      'title' => t('Sirius Help Admin'),
      'description' => t('Administer Sirius Help text.'),
    ),
  );
}

/**
 * Implements hook_block_info
 */

function sirius_help_block_info() {
  $blocks['sirius_help'] = array(
    'info' => t('Sirius Help'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

/** 
 * Implements hook_block_view
 */

function sirius_help_block_view($delta = '') {
  if ($delta == 'sirius_help') { 

    // 
    // We look for thre paths: 
    // - "current_path()"
    // - current path alias
    // - the path as returned by the menu routing system, i.e. "node/%/edit".
    // 

    $paths = array();
    $paths[] = current_path();
    $paths[] = drupal_get_path_alias();
    $menu_item = menu_get_item();
    if ($menu_item['path']) {
      $paths[] = $menu_item['path'];

      if ($menu_item['path'] == 'node/%') {
        $node = menu_get_object();
        if ($node) { $paths[] = 'node/%|' . $node->type; }
      }
    }

    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'sirius_help');
    $query->fieldCondition('field_sirius_paths', 'value', $paths, 'in');
    $stmt = $query->execute(); 
    if (!$stmt['node']) { return NULL; }

    $help_nodes = node_load_multiple(array_keys($stmt['node']));

    $html = '';

    foreach ($help_nodes as $help_node) {
      $html .= sirius_help_render($help_node);
    }

    $block = array();
    $block['subject'] = '';
    $block['content'] = $html;
    return $block;
  }
}

function sirius_help_get($path) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', 'sirius_help');
  $query->fieldCondition('field_sirius_paths', 'value', $path);
  $stmt = $query->execute(); 
  if (!$stmt['node']) { return NULL; }
  return node_load(array_keys($stmt['node'])[0]);
}

function sirius_help_render($help_node) {
  drupal_add_css(drupal_get_path('module', 'sirius_help') . '/css/help.css');

  $html = '<div class="sirius_help"><div class="inner">';
  $html .= $help_node->field_sirius_summary['und'][0]['value'];

  if (strlen($help_node->body['und'][0]['value']) > 10) {
    $html .= '<span class="sirius_help_morelink">';
    $html .= l('Read more.', 'sirius/modal/help-text-view/' . $help_node->nid, array('attributes' => array('class' => array('tool-button'))));
    $html .= '</span>';
  }

  if (user_access('sirius help admin')) {
    $html .= '<span class="sirius_help_editlink">';
    $html .= l('Edit', 'node/' . $help_node->nid . '/edit', array('attributes' => array('class' => array('tool-button')), 'query' => array('destination' => current_path())));
    $html .= '</span>';
  }

  $html .= '</div></div>';

  return $html;
}

function sirius_help_modal_view_access($help_node) {
  if ($help_node->type != 'sirius_help') { return FALSE; }
  if (!user_access('sirius help view')) { return FALSE; }
  return TRUE; 
}

function sirius_help_modal_view($help_node) {
  drupal_add_css(drupal_get_path('module', 'sirius_help') . '/css/help.css');
  drupal_set_title($help_node->title);
  $html = '<div class="sirius_help_full">';
  $html .= $help_node->body['und'][0]['value'];
  $html .= '</div>';

  return $html;
}

/**
 * Implements hook_form_FORM_ID_alter
 */

function sirius_help_form_sirius_help_node_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#node'] && $form['#node']->uuid) {
    sirius_require('grievance_content_types', 'grievance_content_types.features.uuid_node.inc');
    $uuid = $form['#node']->uuid;
    $feature_content = grievance_content_types_uuid_features_default_content();
    foreach ($feature_content as $entry) {
      if ($entry['uuid'] == $uuid) {
        drupal_set_message("Warning: This help text entry is part of the Sirius system. Any changes that you make will be overwritten the next time the system is upgraded. If you wish to add help text specific to your installation, please create a new help text entry with the same path(s).", 'warning');
        break;
      }
    }
  }
}
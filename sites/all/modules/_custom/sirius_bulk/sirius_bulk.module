<?php

// I hate notice errors
ini_set('error_reporting', ini_get('error_reporting') & ~E_NOTICE);

require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.permission.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.menu.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.admin.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.vbo.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.deliver.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.oneclick.inc";

require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_landing.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_create.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_medium.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_body.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_recipients.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_recipients_contacts.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_recipients_workers.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_send.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_queue.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_test.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_oneclick.inc";
require_once DRUPAL_ROOT . "/sites/all/modules/_custom/sirius_bulk/sirius_bulk.page_manual.inc";

/**
 * Implements hook_sirius_cron_scan_info()
 */

function sirius_bulk_sirius_cron_scan_info() {
  $items['sirius_bulk_deliver'] = array(
    'title' => 'Bulk Deliver',
    'description' => 'Deliver any pending bulk messages.',
    'schedule' => 'always',
    'callback' => 'sirius_bulk_deliver',
    'multidomain' => FALSE,
    'component' => 'bulk',
    /*
    'options_form' => array(
    	'ignore_time_restrictions' => array(
	    	'#type' => 'select',
	    	'#title' => 'Ignore all time restrictions?',
	    	'#options' => array(
	    		NULL => '-- Select --',
	    		'No' => 'No',
	    		'Yes' => 'Yes',
	    	),
	    	'#description' => 'If you select "Yes", then all time restrictions will be ignored. This includes throttles to limit excessive sending, as well as any Do Not Disturb restrictions.',
	    ),
    ),
    */
  );

  return $items;
}

function sirius_bulk_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'sirius_bulk_node_form') {

  	$form['body']['#states'] = array(
			'visible' => array(
				array(':input[name="field_sirius_bulk_medium[und]"]' => array('value' => 'email')),
				'or',
				array(':input[name="field_sirius_bulk_medium[und]"]' => array('value' => 'choice')),
			)
  	);

  	$form['field_sirius_sms']['#states'] = array(
			'visible' => array(
				array(':input[name="field_sirius_bulk_medium[und]"]' => array('value' => 'sms')),
				'or',
				array(':input[name="field_sirius_bulk_medium[und]"]' => array('value' => 'choice')),
			)
  	);

  	$form['field_sirius_voice']['#states'] = array(
			'visible' => array(
				array(':input[name="field_sirius_bulk_medium[und]"]' => array('value' => 'voice')),
				'or',
				array(':input[name="field_sirius_bulk_medium[und]"]' => array('value' => 'choice')),
			)
  	);
  }
}

/**
 * Implement hook_views_pre_render
 */

function sirius_bulk_views_pre_render(&$view) {
	if ($view->name == 'sirius_bulkmsg') {
		$bulk_node = menu_get_object();
		if ($bulk_node && $bulk_node->type == 'sirius_bulk') {
			if ($view->result) {
				foreach ($view->result as &$row) {
					$row->sirius_bulk_nid = $bulk_node->nid;
				}
			}
		}
	}
}

function sirius_bulk_media()  {
	$media = array();
	$media['email'] = 'Email';
	$media['sms'] = 'SMS (text message)';
	$media['voice'] = 'Voice (robocall)';
	$media['choice'] = 'Choice (user selects email or SMS)';
	if (sirius_domain_component_enabled('postal')) { $media['postal'] = 'Postal Mail'; }
	return $media;
}

function sirius_bulk_queue_statuses()  {
	return array('add' => 'Pending') + Sirius_Comm::getInstance()->status_options();
}

function sirius_bulk_recipient_remove($bulk_nid, $contact_nid) {
	// Don't add to the queue twice.
	$hr = sirius_bulk_recipient_check($bulk_nid, $contact_nid);
	if (!$hr) { return array('success' => FALSE, 'msg' => 'The contact is not a recipient.'); }

	node_delete($hr['nid']);
	return array('success' => TRUE, 'msg' => 'Contact removed from the bulk message queue.');
}

function sirius_bulk_recipient_add($bulk_nid, $contact_nid, $params = array()) {
	// Don't add to the queue twice.
	$hr = sirius_bulk_recipient_check($bulk_nid, $contact_nid);
	if ($hr) { return array('success' => FALSE, 'msg' => 'The contact has already been added as a recipient.'); }

	$type = 'add';
	if ($params['manual']) { 
		$type = 'add-manual';
		$msg = "Contacted added to the bulk message queue with manual confirmation required.";
	} else {
		$type = 'add';
		$msg = "Contacted added to the bulk message queue.";
	}

  // Add to the queue.
  $contact_node = node_load($contact_nid);
  if (!$contact_node) { return array('success' => FALSE, 'msg' => 'Contact not found.'); }
	sirius_log('bulk:queue', $type, $contact_node->title, '', '', array($bulk_nid, $contact_nid));

	if ($type == 'add-manual') { 
	} else {

	}
	return array('success' => TRUE, 'msg' => $msg);
}

function sirius_bulk_recipient_check($bulk_nid, $contact_nid) {
	$sql = "select nid, field_sirius_type_value from node ";
	$sql .= "join field_data_field_sirius_log_handler handler_a on handler_a.entity_type = 'node' and handler_a.entity_id = node.nid ";
	$sql .= "join field_data_field_sirius_log_handler handler_b on handler_b.entity_type = 'node' and handler_b.entity_id = node.nid ";
	$sql .= "join field_data_field_sirius_category on field_data_field_sirius_category.entity_type = 'node' and field_data_field_sirius_category.entity_id = node.nid ";
	$sql .= "join field_data_field_sirius_type on field_data_field_sirius_type.entity_type = 'node' and field_data_field_sirius_type.entity_id = node.nid ";
	$sql .= "where type = 'sirius_log' ";
	$sql .= "and handler_a.field_sirius_log_handler_target_id = :bulk_nid ";
	$sql .= "and handler_b.field_sirius_log_handler_target_id = :contact_nid ";
	$sql_args[':bulk_nid'] = $bulk_nid;
	$sql_args[':contact_nid'] = $contact_nid;

	$stmt = db_query($sql, $sql_args);
	$hr = $stmt->fetchAssoc();
	return $hr;
}

function sirius_bulk_queue_summary($bulk_nid) {
	$sql = "select field_sirius_type_value, count(*) as c ";
	$sql .= "from node ";
	$sql .= "join field_data_field_sirius_type on field_data_field_sirius_type.entity_type = 'node' and field_data_field_sirius_type.entity_id = node.nid ";
	$sql .= "join field_data_field_sirius_category on field_data_field_sirius_category.entity_type = 'node' and field_data_field_sirius_category.entity_id = node.nid ";
	$sql .= "join field_data_field_sirius_log_handler on field_data_field_sirius_log_handler.entity_type = 'node' and field_data_field_sirius_log_handler.entity_id = node.nid ";
	$sql .= "where node.type = 'sirius_log' ";
	$sql .= "and field_sirius_category_value = 'bulk:queue' ";
	$sql .= "and field_sirius_log_handler_target_id = :bulk_nid ";
	$sql .= "group by field_sirius_type_value ";
	$sql .= "order by field_sirius_type_value ";

	$stmt = db_query($sql, array(':bulk_nid' => $bulk_nid));
	$result = array();
	while ($hr = $stmt->fetchAssoc()) {
		$result[$hr['field_sirius_type_value']] = $hr['c'];
	}

	return $result;
}

function sirius_bulk_queue_summary_render($bulk_node) {
	$json = sirius_jsonfield_util_node_json_get($bulk_node);
	$status_options = sirius_bulk_status_options();

	$html = '<div class="sirius_bulk_summary">';

	$summary = sirius_bulk_queue_summary($bulk_node->nid);
	$total_recipients = 0;
	if ($summary) {
		foreach ($summary as $type => $count) {
			$total_recipients += $count;
		}
	}
	$html .= drupal_render(field_view_field('node', $bulk_node, 'field_sirius_bulk_medium', 'full'));
	$html .= drupal_render(field_view_field('node', $bulk_node, 'field_sirius_bulk_status', 'full'));
	$html .= drupal_render(field_view_field('node', $bulk_node, 'field_sirius_datetime', 'full'));
	$delivery_ts = sirius_date_ts($bulk_node, 'field_sirius_datetime');
	if ($delivery_ts > time()) {
		$html .= sirius_fakerender_field('Sending starts in:', format_interval($delivery_ts-time()));
	}

	if ($bulk_node->field_sirius_bulk_status['und'][0]['value'] != 'sent') {
		$dnd_options = sirius_do_not_disturb_list();
		$dnd_id = $json['do_not_disturb']['id'];
		if (!$dnd_id) { $dnd_id = 'default'; }
		$dnd_name = $dnd_options[$dnd_id];
		$dnd_check = sirius_do_not_disturb_check($dnd_id);
		$dnd_text = '';
		if ($dnd_name) { $dnd_text .= $dnd_name; } else { $dnd_text .= $dnd_id; }
		if (drupal_valid_path('sirius/admin/do_not_disturb')) { 
			$dnd_text .= ' [' . l('Manage', 'sirius/admin/do_not_disturb') . ']';
		}
		$html .= sirius_fakerender_field('Do Not Disturb Set:', $dnd_text);
		if ($dnd_check['success']) { $dnd_text = 'Sending is permitted'; } else { $dnd_text = 'Sending is NOT permitted: ' . $dnd_check['msg']; }
		$html .= sirius_fakerender_field('Do Not Disturb Status:', $dnd_text);
	}

	$html .= drupal_render(field_view_field('node', $bulk_node, 'field_sirius_datetime_completed', 'full'));
	$recipients_html = '<strong>' . number_format($total_recipients, 0) . ' total recipients</strong>';
	if ($summary) {
		$recipients_html .= ': ';
		$rows = array();
		$is_first = TRUE;
		foreach ($summary as $type => $count) {
			if ($is_first) { $is_first = FALSE; } else { $recipients_html .= ' / '; }

			$type_render = $status_options[$type];
			if (!$type_render) { $type_render = $type; }
			$recipients_html .= ' <strong>' . number_format($count, 0) . '</strong> ' . $type_render;
		}
	}
	$html .= sirius_fakerender_field('Recipients: ', $recipients_html);

	$html .= '</div>';
	return $html;
}

function sirius_bulk_status_options() {
	return array(
		'add' => 'Pending delivery',
		'add-manual' => 'Pending confirmation',
		'sent' => 'Sent',
		'error' => 'Error',
	);
}


function sirius_bulk_create($title, $medium) {
	// Create the event node
	global $user;
	$domain_nid = sirius_domain_nid();
	$bulk_node = new stdClass();
	$bulk_node->type = 'sirius_bulk';
	$bulk_node->no_recurse = TRUE;
	$bulk_node->language = $user->language;
	$bulk_node->uid = $user->uid;
	$bulk_node->status = 1;
	$bulk_node->promote = 0;
	$bulk_node->comment = 0;
	$bulk_node->title = $title;
	if ($medium) { $bulk_node->field_sirius_bulk_medium['und'][0]['value'] = $medium; }
	$bulk_node->field_sirius_bulk_status['und'][0]['value'] = 'draft';
	if ($domain_nid) { $bulk_node->field_sirius_domain['und'][0]['target_id'] = $domain_nid; }
	node_object_prepare($bulk_node);
	$bulk_node = node_submit($bulk_node);
	node_save($bulk_node);
	return $bulk_node;
}

function sirius_bulk_list($params = array()) {
	$domain_nid = sirius_domain_nid();

	$sql_args = array();
	$sql = "select nid, title ";
	$sql .= "from node ";
	$sql .= "left join field_data_field_sirius_bulk_status on field_data_field_sirius_bulk_status.entity_type = 'node' and field_data_field_sirius_bulk_status.entity_id = node.nid ";
	$sql .= "left join field_data_field_sirius_domain on field_data_field_sirius_domain.entity_type = 'node' and field_data_field_sirius_domain.entity_id = node.nid ";
	$sql .= "where type = 'sirius_bulk' ";
	if ($domain_nid) {
		$sql .= "and field_sirius_domain_target_id = :domain_nid ";
		$sql_args[':domain_nid'] = $domain_nid;
	} else {
		$sql .= "and field_sirius_domain_target_id is null ";
	}
	if ($params['statuses']) {
		$sql .= "and field_sirius_bulk_status_value in (:statuses) ";
		$sql_args[':statuses'] = $params['statuses'];
	}
	$sql .= "order by nid ";

	$stmt = sirius_sql_query($sql, $sql_args);
	$result = array();
	while ($hr = $stmt->fetchAssoc()) {
		$result[$hr['nid']] = $hr['title'];
	}

	return $result;
}
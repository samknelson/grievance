<?php

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_service') . '/sirius_service.permission.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_service') . '/sirius_service.menu.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_service') . '/sirius_service.server.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_service') . '/sirius_service.client.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sirius_service') . '/sirius_service.proxy.inc';

/**
 * Implements hook_sirius_domain_component_info
 */

function sirius_service_sirius_domain_component_info() {
  return array(
    'service' => array(
      'title' => 'Services',
      'description' => 'Enable functionality to allow Sirius to be a service for remote function calls',
    ),
    'service:client' => array(
      'title' => 'Services - Client',
      'description' => 'Allow this instance to server as a client',
    ),
    'service:server' => array(
      'title' => 'Services - Server',
      'description' => 'Allow this instance to server as a server',
    ),
    'service:proxy:server' => array(
      'title' => 'Services - Proxy - Server',
      'description' => 'Allow this instance to server as a proxy server',
    ),
    'service:proxy:client' => array(
      'title' => 'Services - Proxy - Client',
      'description' => 'Allow this instance to server as a proxy client',
    ),
  );
}

/**
 * Implements hook_sirius_config_links_alter()
 */

function sirius_service_sirius_config_links_alter(&$links) {
  $links['service'] = array('title' => 'Service');
  $links['service']['links']['sirius/service/config'] = array('title' => 'Config', 'description' => 'Configure client and server service access.');
}

function _sirius_service_array_to_node(&$result) {
  if (!is_array($result)) { return $result; }

  if (isset($result['nid']) && isset($result['status']) && isset($result['created'])) {
    $result = (object) $result;
    $result->sirius_is_remote = TRUE;
    return $result;
  }

  if (isset($result['tid']) && isset($result['vid']) && isset($result['name'])) {
    $result = (object) $result;
    $result->sirius_is_remote = TRUE;
    return $result;
  }

  foreach ($result as $key => $value) {
    $result[$key] = _sirius_service_array_to_node($value);
  }


  return $result;
}

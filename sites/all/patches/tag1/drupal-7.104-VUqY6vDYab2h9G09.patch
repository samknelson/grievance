diff --git a/.gitignore b/.gitignore
index baff153638b..fa6cd2bcd2f 100644
--- a/.gitignore
+++ b/.gitignore
@@ -4,3 +4,6 @@ sites/*/settings*.php
 # Ignore paths that contain user-generated content.
 sites/*/files
 sites/*/private
+
+/vendor
+/.ddev
diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
index da509c4c6b8..48cc54f4d6e 100644
--- a/.gitlab-ci.yml
+++ b/.gitlab-ci.yml
@@ -9,6 +9,13 @@
 # - DrupalSpoons
 ################
 
+# Include packaging pipeline
+include:
+  - project: "tag1consulting/d7es-ci-packaging"
+    ref: main
+    file:
+      - "templates/package_release/package_release.yml"
+
 ################
 # Workflow
 #
@@ -39,6 +46,8 @@ workflow:
     - if: $CI_PIPELINE_SOURCE == "web"
      # Run if triggered from WebIDE
     - if: $CI_PIPELINE_SOURCE == "webide"
+    # Run if tag pushed - required for packaging pipeline
+    - if: $CI_COMMIT_TAG
 
 ################
 # Variables
@@ -55,10 +64,12 @@ workflow:
 
 variables:
   _CONFIG_DOCKERHUB_ROOT: "drupalci"
-  _TARGET_PHP: "8.1"
+  _TARGET_PHP: "8.2"
   CONCURRENCY: 15
   GIT_DEPTH: "3"
   COMPOSER_ALLOW_SUPERUSER: 1
+  SKIP_PHPSTAN: "1"
+  SKIP_PHPCS: "1"
 
 ################
 # Stages
@@ -87,6 +98,11 @@ stages:
   ################
   - üóúÔ∏è Test
 
+  # Used by packaging pipeline
+  - packaging
+  - upload
+  - release
+
 #############
 # Templates #
 #############
@@ -122,10 +138,10 @@ stages:
 # Jobs define what scripts are actually executed in each stage.
 ################
 
-'üßπ PHP Compatibility checks (PHPCS)':
+'üßπ PHPCS':
   stage: ü™Ñ Lint
   variables:
-    PHPCS_PHP_VERSION: "5.6"
+    PHPCS_PHP_VERSION: "8.2"
     KUBERNETES_CPU_REQUEST: "16"
   interruptible: true
   allow_failure: true
@@ -146,6 +162,8 @@ stages:
     reports:
       codequality: phpcs-quality-report.json
   rules:
+    - if: $SKIP_PHPCS == "1"
+      when: never
     - <<: *run-on-mr
   before_script:
     - echo "{}" > composer.json
@@ -159,11 +177,59 @@ stages:
     - echo "If this list contains more files than what you changed, then you need to rebase your branch."
     - vendor/bin/phpcs --basepath=$CI_PROJECT_DIR --report-\\Micheh\\PhpCodeSniffer\\Report\\Gitlab=phpcs-quality-report.json --report-full --report-summary --standard=PHPCompatibility --runtime-set testVersion $PHPCS_PHP_VERSION --extensions=php,module,inc,install,test,profile,theme $MODIFIED
 
+'üßπ PHPStan':
+  stage: ü™Ñ Lint
+  variables:
+    KUBERNETES_CPU_REQUEST: "16"
+  interruptible: true
+  rules:
+    - if: $SKIP_PHPSTAN != "1"
+  retry:
+    max: 2
+    when:
+      - unknown_failure
+      - api_failure
+      - stuck_or_timeout_failure
+      - runner_system_failure
+      - scheduler_failure
+  image:
+    name: $_CONFIG_DOCKERHUB_ROOT/php-$_TARGET_PHP-apache:production
+  script:
+    - composer install --optimize-autoloader
+    - if [ -n "$COMPOSER_UPDATE" ]; then
+      composer update --optimize-autoloader;
+      composer outdated;
+      fi
+    - vendor/bin/phpstan --version
+    # Rely on PHPStan caching to execute analysis multiple times without performance drawback.
+    # Output a copy in junit.
+    - php vendor/bin/phpstan analyze --error-format=gitlab > phpstan-quality-report.json || EXIT_CODE=$?
+    - php vendor/bin/phpstan analyze --no-progress --error-format=junit > phpstan-junit.xml || true
+    - |
+      if [ -n "$EXIT_CODE" ]; then
+        # Output a copy in plain text for human logs.
+        php vendor/bin/phpstan analyze --no-progress || true
+        # Generate a new baseline.
+        echo "Generating an PHPStan baseline file (available as job artifact)."
+        php vendor/bin/phpstan analyze --no-progress --generate-baseline=phpstan-baseline.php || true
+        exit $EXIT_CODE
+      fi
+
+  artifacts:
+    reports:
+      codequality: phpstan-quality-report.json
+      junit: phpstan-junit.xml
+    # Only store the baseline if the job fails.
+    when: on_failure
+    paths:
+      - phpstan-baseline.php
+
+
 # Default job.
-'PHP 8.1 MySQL 5.7':
+'PHP 8.2 MySQL 5.7':
   <<: *default-stage
   variables:
-    _TARGET_PHP: "8.1"
+    _TARGET_PHP: "8.2"
     _TARGET_DB: "mysql-5.7"
   rules:
     - <<: *run-on-commit
@@ -199,6 +265,13 @@ stages:
     _TARGET_PHP: "8.2"
     _TARGET_DB: "mysql-8"
 
+# Not yet supported by Tag1 as there are a few known test failures.
+'PHP 8.3 MySQL 5.7':
+  <<: *default-stage
+  variables:
+    _TARGET_PHP: "8.3"
+    _TARGET_DB: "mysql-5.7"
+
 'PHP 7.4 PostgreSQL 9.5':
   <<: *default-stage
   variables:
diff --git a/.gitlab-ci/pipeline.yml b/.gitlab-ci/pipeline.yml
index 3272b26fd81..bd07764d645 100644
--- a/.gitlab-ci/pipeline.yml
+++ b/.gitlab-ci/pipeline.yml
@@ -85,7 +85,7 @@ stages:
   - sudo -u www-data git config --global --add safe.directory $CI_PROJECT_DIR
 
 .install-drupal: &install-drupal
-  - sudo -u www-data /usr/local/bin/drush si -y --db-url=$SIMPLETEST_DB --clean-url=0 --account-name=admin --account-pass=drupal --account-mail=admin@example.com
+  - sudo -u www-data /usr/local/bin/drush si -y standard install_configure_form.update_status_module='array(FALSE,FALSE)' --db-url=$SIMPLETEST_DB --clean-url=0 --account-name=admin --account-pass=drupal --account-mail=admin@example.com
   - sudo -u www-data /usr/local/bin/drush vset simpletest_clear_results '0'
   - sudo -u www-data /usr/local/bin/drush vset simpletest_verbose '1'
   - sudo -u www-data /usr/local/bin/drush en -y simpletest
diff --git a/.gitlab/.gitkeep b/.gitlab/.gitkeep
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/.gitlab/merge_request_templates/Default.md b/.gitlab/merge_request_templates/Default.md
new file mode 100644
index 00000000000..ac7e5ff8389
--- /dev/null
+++ b/.gitlab/merge_request_templates/Default.md
@@ -0,0 +1,17 @@
+## Issue link(s)
+<!-- #123 or tag1consulting/repo#123 -->
+
+## Description
+<!-- Briefly explain what the pull request is trying to achieve and any important technical context. -->
+
+## Test steps
+<!-- 1. When I do this...2. And that....3. Then I expect... -->
+
+## Manual Deploy Steps
+<!-- If this code requires any manual deploy steps, please describe below. -->
+
+## Followup Tasks
+<!-- If any followup tasks are needed, please describe below. -->
+
+## Other information
+<!-- Any other information that is important to this PR such as screenshots of how the component looks before and after the change. -->
diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 2cf701b7c88..4803cf4e7b9 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,3 +1,6 @@
+Drupal 7.xxx, xxxx-xx-xx (development version)
+------------------------
+
 Drupal 7.103, 2024-12-04
 ------------------------
 - So Long, and Thanks for All the Fish
diff --git a/D7ES_CHANGELOG.txt b/D7ES_CHANGELOG.txt
new file mode 100644
index 00000000000..64795643ed3
--- /dev/null
+++ b/D7ES_CHANGELOG.txt
@@ -0,0 +1,3 @@
+Drupal 7.104, 2025-10-01
+------------------------
+- Backport Backdrop SA-Contrib 2025-015 for BBQ JavaScript.
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index 5d9a59a554f..8461e0de926 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -8,7 +8,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '7.103');
+define('VERSION', '7.104');
 
 /**
  * Core API compatibility.
diff --git a/misc/jquery.ba-bbq.js b/misc/jquery.ba-bbq.js
index deb9a2fa4bc..2f9ab6feff5 100644
--- a/misc/jquery.ba-bbq.js
+++ b/misc/jquery.ba-bbq.js
@@ -1,19 +1,18 @@
-
-/*
- * jQuery BBQ: Back Button & Query Library - v1.2.1 - 2/17/2010
- * http://benalman.com/projects/jquery-bbq-plugin/
+/*!
+ * jQuery BBQ: Back Button & Query Library - v1.4pre - 1/15/2013
+ * https://benalman.com/projects/jquery-bbq-plugin/
  *
- * Copyright (c) 2010 "Cowboy" Ben Alman
+ * Copyright (c) 2010-2013 "Cowboy" Ben Alman
  * Dual licensed under the MIT and GPL licenses.
- * http://benalman.com/about/license/
+ * https://benalman.com/about/license/
  */
-(function($,p){var i,m=Array.prototype.slice,r=decodeURIComponent,a=$.param,c,l,v,b=$.bbq=$.bbq||{},q,u,j,e=$.event.special,d="hashchange",A="querystring",D="fragment",y="elemUrlAttr",g="location",k="href",t="src",x=/^.*\?|#.*$/g,w=/^.*\#/,h,C={};function E(F){return typeof F==="string"}function B(G){var F=m.call(arguments,1);return function(){return G.apply(this,F.concat(m.call(arguments)))}}function n(F){return F.replace(/^[^#]*#?(.*)$/,"$1")}function o(F){return F.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/,"$1")}function f(H,M,F,I,G){var O,L,K,N,J;if(I!==i){K=F.match(H?/^([^#]*)\#?(.*)$/:/^([^#?]*)\??([^#]*)(#?.*)/);J=K[3]||"";if(G===2&&E(I)){L=I.replace(H?w:x,"")}else{N=l(K[2]);I=E(I)?l[H?D:A](I):I;L=G===2?I:G===1?$.extend({},I,N):$.extend({},N,I);L=a(L);if(H){L=L.replace(h,r)}}O=K[1]+(H?"#":L||!K[1]?"?":"")+L+J}else{O=M(F!==i?F:p[g][k])}return O}a[A]=B(f,0,o);a[D]=c=B(f,1,n);c.noEscape=function(G){G=G||"";var F=$.map(G.split(""),encodeURIComponent);h=new RegExp(F.join("|"),"g")};c.noEscape(",/");$.deparam=l=function(I,F){var H={},G={"true":!0,"false":!1,"null":null};$.each(I.replace(/\+/g," ").split("&"),function(L,Q){var K=Q.split("="),P=r(K[0]),J,O=H,M=0,R=P.split("]["),N=R.length-1;if(/\[/.test(R[0])&&/\]$/.test(R[N])){R[N]=R[N].replace(/\]$/,"");R=R.shift().split("[").concat(R);N=R.length-1}else{N=0}if(K.length===2){J=r(K[1]);if(F){J=J&&!isNaN(J)?+J:J==="undefined"?i:G[J]!==i?G[J]:J}if(N){for(;M<=N;M++){P=R[M]===""?O.length:R[M];O=O[P]=M<N?O[P]||(R[M+1]&&isNaN(R[M+1])?{}:[]):J}}else{if($.isArray(H[P])){H[P].push(J)}else{if(H[P]!==i){H[P]=[H[P],J]}else{H[P]=J}}}}else{if(P){H[P]=F?i:""}}});return H};function z(H,F,G){if(F===i||typeof F==="boolean"){G=F;F=a[H?D:A]()}else{F=E(F)?F.replace(H?w:x,""):F}return l(F,G)}l[A]=B(z,0);l[D]=v=B(z,1);$[y]||($[y]=function(F){return $.extend(C,F)})({a:k,base:k,iframe:t,img:t,input:t,form:"action",link:k,script:t});j=$[y];function s(I,G,H,F){if(!E(H)&&typeof H!=="object"){F=H;H=G;G=i}return this.each(function(){var L=$(this),J=G||j()[(this.nodeName||"").toLowerCase()]||"",K=J&&L.attr(J)||"";L.attr(J,a[I](K,H,F))})}$.fn[A]=B(s,A);$.fn[D]=B(s,D);b.pushState=q=function(I,F){if(E(I)&&/^#/.test(I)&&F===i){F=2}var H=I!==i,G=c(p[g][k],H?I:{},H?F:2);p[g][k]=G+(/#/.test(G)?"":"#")};b.getState=u=function(F,G){return F===i||typeof F==="boolean"?v(F):v(G)[F]};b.removeState=function(F){var G={};if(F!==i){G=u();$.each($.isArray(F)?F:arguments,function(I,H){delete G[H]})}q(G,2)};e[d]=$.extend(e[d],{add:function(F){var H;function G(J){var I=J[D]=c();J.getState=function(K,L){return K===i||typeof K==="boolean"?l(I,K):l(I,L)[K]};H.apply(this,arguments)}if($.isFunction(F)){H=F;return G}else{H=F.handler;F.handler=G}}})})(jQuery,this);
-/*
- * jQuery hashchange event - v1.2 - 2/11/2010
- * http://benalman.com/projects/jquery-hashchange-plugin/
+(function($,r){var h,n=Array.prototype.slice,t=decodeURIComponent,a=$.param,j,c,m,y,b=$.bbq=$.bbq||{},s,x,k,e=$.event.special,d="hashchange",B="querystring",F="fragment",z="elemUrlAttr",l="href",w="src",p=/^.*\?|#.*$/g,u,H,g,i,C,E={};function G(I){return typeof I==="string"}function D(J){var I=n.call(arguments,1);return function(){return J.apply(this,I.concat(n.call(arguments)))}}function o(I){return I.replace(H,"$2")}function q(I){return I.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/,"$1")}function f(K,P,I,L,J){var R,O,N,Q,M;if(L!==h){N=I.match(K?H:/^([^#?]*)\??([^#]*)(#?.*)/);M=N[3]||"";if(J===2&&G(L)){O=L.replace(K?u:p,"")}else{Q=m(N[2]);L=G(L)?m[K?F:B](L):L;O=J===2?L:J===1?$.extend({},L,Q):$.extend({},Q,L);O=j(O);if(K){O=O.replace(g,t)}}R=N[1]+(K?C:O||!N[1]?"?":"")+O+M}else{R=P(I!==h?I:location.href)}return R}a[B]=D(f,0,q);a[F]=c=D(f,1,o);a.sorted=j=function(J,K){var I=[],L={};$.each(a(J,K).split("&"),function(P,M){var O=M.replace(/(?:%5B|=).*$/,""),N=L[O];if(!N){N=L[O]=[];I.push(O)}N.push(M)});return $.map(I.sort(),function(M){return L[M]}).join("&")};c.noEscape=function(J){J=J||"";var I=$.map(J.split(""),encodeURIComponent);g=new RegExp(I.join("|"),"g")};c.noEscape(",/");c.ajaxCrawlable=function(I){if(I!==h){if(I){u=/^.*(?:#!|#)/;H=/^([^#]*)(?:#!|#)?(.*)$/;C="#!"}else{u=/^.*#/;H=/^([^#]*)#?(.*)$/;C="#"}i=!!I}return i};c.ajaxCrawlable(0);$.deparam=m=function(M,J){var I=["__proto__","constructor"];var L={},K={"true":!0,"false":!1,"null":null};$.each(M.replace(/\+/g," ").split("&"),function(P,U){var O=U.split("="),T=t(O[0]),N,S=L,Q=0,V=T.split("]["),R=V.length-1;if(I.includes(T)){return}if(/\[/.test(V[0])&&/\]$/.test(V[R])){V[R]=V[R].replace(/\]$/,"");V=V.shift().split("[").concat(V);R=V.length-1}else{R=0}if(O.length===2){N=t(O[1]);if(J){N=N&&!isNaN(N)?+N:N==="undefined"?h:K[N]!==h?K[N]:N}if(R){for(;Q<=R;Q++){T=V[Q]===""?S.length:V[Q];if(I.includes(T)){return}S=S[T]=Q<R?S[T]||(V[Q+1]&&isNaN(V[Q+1])?{}:[]):N}}else{if($.isArray(L[T])){L[T].push(N)}else{if(L[T]!==h){L[T]=[L[T],N]}else{L[T]=N}}}}else{if(T){L[T]=J?h:""}}});return L};function A(K,I,J){if(I===h||typeof I==="boolean"){J=I;I=a[K?F:B]()}else{I=G(I)?I.replace(K?u:p,""):I}return m(I,J)}m[B]=D(A,0);m[F]=y=D(A,1);$[z]||($[z]=function(I){return $.extend(E,I)})({a:l,base:l,iframe:w,img:w,input:w,form:"action",link:l,script:w});k=$[z];function v(L,J,K,I){if(!G(K)&&typeof K!=="object"){I=K;K=J;J=h}return this.each(function(){var O=$(this),M=J||k()[(this.nodeName||"").toLowerCase()]||"",N=M&&O.attr(M)||"";O.attr(M,a[L](N,K,I))})}$.fn[B]=D(v,B);$.fn[F]=D(v,F);b.pushState=s=function(L,I){if(G(L)&&/^#/.test(L)&&I===h){I=2}var K=L!==h,J=c(location.href,K?L:{},K?I:2);location.href=J};b.getState=x=function(I,J){return I===h||typeof I==="boolean"?y(I):y(J)[I]};b.removeState=function(I){var J={};if(I!==h){J=x();$.each($.isArray(I)?I:arguments,function(L,K){delete J[K]})}s(J,2)};e[d]=$.extend(e[d],{add:function(I){var K;function J(M){var L=M[F]=c();M.getState=function(N,O){return N===h||typeof N==="boolean"?m(L,N):m(L,O)[N]};K.apply(this,arguments)}if($.isFunction(I)){K=I;return J}else{K=I.handler;I.handler=J}}})})(jQuery,this);
+/*!
+ * jQuery hashchange event - v1.3 - 7/21/2010
+ * https://benalman.com/projects/jquery-hashchange-plugin/
  *
  * Copyright (c) 2010 "Cowboy" Ben Alman
  * Dual licensed under the MIT and GPL licenses.
- * http://benalman.com/about/license/
+ * https://benalman.com/about/license/
  */
-(function($,i,b){var j,k=$.event.special,c="location",d="hashchange",l="href",f=$.browser,g=document.documentMode,h=f.msie&&(g===b||g<8),e="on"+d in i&&!h;function a(m){m=m||i[c][l];return m.replace(/^[^#]*#?(.*)$/,"$1")}$[d+"Delay"]=100;k[d]=$.extend(k[d],{setup:function(){if(e){return false}$(j.start)},teardown:function(){if(e){return false}$(j.stop)}});j=(function(){var m={},r,n,o,q;function p(){o=q=function(s){return s};if(h){n=$('<iframe src="javascript:0"/>').hide().insertAfter("body")[0].contentWindow;q=function(){return a(n.document[c][l])};o=function(u,s){if(u!==s){var t=n.document;t.open().close();t[c].hash="#"+u}};o(a())}}m.start=function(){if(r){return}var t=a();o||p();(function s(){var v=a(),u=q(t);if(v!==t){o(t=v,u);$(i).trigger(d)}else{if(u!==t){i[c][l]=i[c][l].replace(/#.*/,"")+"#"+u}}r=setTimeout(s,$[d+"Delay"])})()};m.stop=function(){if(!n){r&&clearTimeout(r);r=0}};return m})()})(jQuery,this);
+(function($,e,b){var c="hashchange",h=document,f,g=$.event.special,i=h.documentMode,d="on"+c in e&&(i===b||i>7);function a(j){j=j||location.href;return"#"+j.replace(/^[^#]*#?(.*)$/,"$1")}$.fn[c]=function(j){return j?this.bind(c,j):this.trigger(c)};$.fn[c].delay=50;g[c]=$.extend(g[c],{setup:function(){if(d){return false}$(f.start)},teardown:function(){if(d){return false}$(f.stop)}});f=(function(){var j={},p,m=a(),k=function(q){return q},l=k,o=k;j.start=function(){p||n()};j.stop=function(){p&&clearTimeout(p);p=b};function n(){var r=a(),q=o(m);if(r!==m){l(m=r,q);$(e).trigger(c)}else{if(q!==m){location.href=location.href.replace(/#.*/,"")+q}}p=setTimeout(n,$.fn[c].delay)}return j})()})(jQuery,this);
diff --git a/modules/system/system.module b/modules/system/system.module
index 4986aa59040..26e2fafc8eb 100644
--- a/modules/system/system.module
+++ b/modules/system/system.module
@@ -1233,8 +1233,8 @@ function system_library() {
   // jQuery BBQ plugin.
   $libraries['jquery.bbq'] = array(
     'title' => 'jQuery BBQ',
-    'website' => 'http://benalman.com/projects/jquery-bbq-plugin/',
-    'version' => '1.2.1',
+    'website' => 'https://github.com/yiisoft/yii/blob/master/framework/web/js/source/jquery.ba-bbq.js',
+    'version' => '1.4pre',
     'js' => array(
       'misc/jquery.ba-bbq.js' => array(),
     ),
